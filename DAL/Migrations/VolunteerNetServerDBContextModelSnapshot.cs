// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(VolunteerNetServerDBContext))]
    partial class VolunteerNetServerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("RequiredNumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("da404957-d921-4c53-a39f-7cf9fdc04f45"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "vi"
                        },
                        new
                        {
                            Id = new Guid("28fbc37c-aaaf-4e24-90ba-16b6744e02a7"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "dn"
                        },
                        new
                        {
                            Id = new Guid("0e41c7b9-6fd1-4116-9663-5b15118d983a"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "zhy"
                        },
                        new
                        {
                            Id = new Guid("ef4fe01b-068d-4093-bc62-652be648ed70"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "zp"
                        },
                        new
                        {
                            Id = new Guid("af43aef1-f59b-4cc6-b646-9fe9b0dfedad"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "if"
                        },
                        new
                        {
                            Id = new Guid("1b4948db-2436-4f0b-83ba-44ed8c1ae6fd"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "ky"
                        },
                        new
                        {
                            Id = new Guid("a3ba1f4b-ce75-45e4-9637-5c55e1636a3d"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "kr"
                        },
                        new
                        {
                            Id = new Guid("7bc9910d-096f-48bf-b8d2-7d77d58003fe"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "lut"
                        },
                        new
                        {
                            Id = new Guid("4abcb4ba-4f7a-4107-95ac-e1f303645607"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "lv"
                        },
                        new
                        {
                            Id = new Guid("44274150-ff1f-4487-9ac2-2e021a4c8cc4"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "my"
                        },
                        new
                        {
                            Id = new Guid("50d118a6-229b-400c-86fd-08ffe25543c2"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "od"
                        },
                        new
                        {
                            Id = new Guid("e94b8435-5a6e-4065-99bb-1b37569b672e"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "pol"
                        },
                        new
                        {
                            Id = new Guid("3dd2a55a-002c-4dbf-88b4-798bc5101c98"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "ri"
                        },
                        new
                        {
                            Id = new Guid("83f97f88-7152-4503-903f-ee13b6a4d2e1"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "su"
                        },
                        new
                        {
                            Id = new Guid("d37a8a4d-3519-46da-a355-27566647e6db"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "ter"
                        },
                        new
                        {
                            Id = new Guid("21a9a703-424d-452d-b93b-0edbfb275b57"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "uzh"
                        },
                        new
                        {
                            Id = new Guid("8dd47a2d-3e4a-4c9b-b78c-1b6bfd91c904"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "khar"
                        },
                        new
                        {
                            Id = new Guid("0bc1dcc9-92a4-48b0-bf2f-3ec992457a06"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "kher"
                        },
                        new
                        {
                            Id = new Guid("b9e74a3e-4b14-4770-9fb0-bcacb4e95717"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "khm"
                        },
                        new
                        {
                            Id = new Guid("215c4ce6-551a-4044-86ed-b0ca8a820a1b"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "chk"
                        },
                        new
                        {
                            Id = new Guid("4b34c4db-9a53-4e0e-b65a-0f6f60d3ff07"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "chv"
                        },
                        new
                        {
                            Id = new Guid("c13b93a5-cea8-4338-971e-b5d167087732"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "chh"
                        },
                        new
                        {
                            Id = new Guid("84aef2db-6963-42d8-ba28-7c3ffa61bbcb"),
                            CountryId = new Guid("a1da13e7-d739-4622-9667-0a6b4f8aefa3"),
                            ISO = "var"
                        },
                        new
                        {
                            Id = new Guid("b0057160-04ea-4c1d-ab49-18a2ed3a1015"),
                            CountryId = new Guid("a1da13e7-d739-4622-9667-0a6b4f8aefa3"),
                            ISO = "lub"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9c7086c-efaa-439b-a756-0dacf597e695"),
                            CityId = new Guid("da404957-d921-4c53-a39f-7cf9fdc04f45"),
                            Language = "uk",
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = new Guid("ef5d7f7b-73b2-44b4-ba54-8bab113134e8"),
                            CityId = new Guid("28fbc37c-aaaf-4e24-90ba-16b6744e02a7"),
                            Language = "uk",
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = new Guid("3f2a68a0-2ee1-4152-a574-05069364762a"),
                            CityId = new Guid("0e41c7b9-6fd1-4116-9663-5b15118d983a"),
                            Language = "uk",
                            Name = "Житомир"
                        },
                        new
                        {
                            Id = new Guid("ed2ffcc0-4cb6-413f-a427-434db2c2e623"),
                            CityId = new Guid("ef4fe01b-068d-4093-bc62-652be648ed70"),
                            Language = "uk",
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = new Guid("ffaa0fed-b526-4ad7-8c90-fd0f5ea01a23"),
                            CityId = new Guid("af43aef1-f59b-4cc6-b646-9fe9b0dfedad"),
                            Language = "uk",
                            Name = "Івано-Франківськ"
                        },
                        new
                        {
                            Id = new Guid("a68ca41c-39e6-4c27-9f35-fab5a45d5fd0"),
                            CityId = new Guid("1b4948db-2436-4f0b-83ba-44ed8c1ae6fd"),
                            Language = "uk",
                            Name = "Київ"
                        },
                        new
                        {
                            Id = new Guid("73444fd1-3f55-4485-a0c2-348deeff9732"),
                            CityId = new Guid("a3ba1f4b-ce75-45e4-9637-5c55e1636a3d"),
                            Language = "uk",
                            Name = "Кропивницький"
                        },
                        new
                        {
                            Id = new Guid("bb9624cf-213f-4f5b-8548-32f6206eee93"),
                            CityId = new Guid("7bc9910d-096f-48bf-b8d2-7d77d58003fe"),
                            Language = "uk",
                            Name = "Луцьк"
                        },
                        new
                        {
                            Id = new Guid("47fb8a9e-c3f9-48d3-992a-81b5ddedd560"),
                            CityId = new Guid("4abcb4ba-4f7a-4107-95ac-e1f303645607"),
                            Language = "uk",
                            Name = "Львів"
                        },
                        new
                        {
                            Id = new Guid("b5908a09-a4d0-4b5a-9718-20c78bb46897"),
                            CityId = new Guid("44274150-ff1f-4487-9ac2-2e021a4c8cc4"),
                            Language = "uk",
                            Name = "Миколаїв"
                        },
                        new
                        {
                            Id = new Guid("cab10ffe-23da-40b1-ad18-319d16c7f1ea"),
                            CityId = new Guid("50d118a6-229b-400c-86fd-08ffe25543c2"),
                            Language = "uk",
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = new Guid("30568f9d-ed1a-45ec-bd99-c3840999fd4f"),
                            CityId = new Guid("e94b8435-5a6e-4065-99bb-1b37569b672e"),
                            Language = "uk",
                            Name = "Полтава"
                        },
                        new
                        {
                            Id = new Guid("6b7aac7f-dfbc-471d-a08e-fb51e808fa57"),
                            CityId = new Guid("3dd2a55a-002c-4dbf-88b4-798bc5101c98"),
                            Language = "uk",
                            Name = "Рівне"
                        },
                        new
                        {
                            Id = new Guid("acc16fda-a8a3-461e-b641-b8f8847d49b1"),
                            CityId = new Guid("83f97f88-7152-4503-903f-ee13b6a4d2e1"),
                            Language = "uk",
                            Name = "Суми"
                        },
                        new
                        {
                            Id = new Guid("063c1156-d240-4d90-8e61-0566185daaff"),
                            CityId = new Guid("d37a8a4d-3519-46da-a355-27566647e6db"),
                            Language = "uk",
                            Name = "Тернопіль"
                        },
                        new
                        {
                            Id = new Guid("28f37447-3b35-4d84-ae2e-5d64dbae6aeb"),
                            CityId = new Guid("21a9a703-424d-452d-b93b-0edbfb275b57"),
                            Language = "uk",
                            Name = "Ужгород"
                        },
                        new
                        {
                            Id = new Guid("a1e6fab9-152b-429c-b4f2-2be06f71c876"),
                            CityId = new Guid("8dd47a2d-3e4a-4c9b-b78c-1b6bfd91c904"),
                            Language = "uk",
                            Name = "Харків"
                        },
                        new
                        {
                            Id = new Guid("b2ede528-8191-42b6-8ded-90ea22762315"),
                            CityId = new Guid("0bc1dcc9-92a4-48b0-bf2f-3ec992457a06"),
                            Language = "uk",
                            Name = "Херсон"
                        },
                        new
                        {
                            Id = new Guid("9a3c80ca-f737-497c-b17c-0d8029d1923e"),
                            CityId = new Guid("b9e74a3e-4b14-4770-9fb0-bcacb4e95717"),
                            Language = "uk",
                            Name = "Хмельницький"
                        },
                        new
                        {
                            Id = new Guid("170944f6-2f82-421c-ba4b-3a110a88b529"),
                            CityId = new Guid("215c4ce6-551a-4044-86ed-b0ca8a820a1b"),
                            Language = "uk",
                            Name = "Черкаси"
                        },
                        new
                        {
                            Id = new Guid("67476422-de59-4ae7-b0b3-2941ac55d9e6"),
                            CityId = new Guid("4b34c4db-9a53-4e0e-b65a-0f6f60d3ff07"),
                            Language = "uk",
                            Name = "Чернівці"
                        },
                        new
                        {
                            Id = new Guid("0ebd50ca-4760-442c-9cb9-e372f54b416a"),
                            CityId = new Guid("c13b93a5-cea8-4338-971e-b5d167087732"),
                            Language = "uk",
                            Name = "Чернігів"
                        },
                        new
                        {
                            Id = new Guid("871b8512-24d6-49f0-8066-f5db9dfc6a41"),
                            CityId = new Guid("da404957-d921-4c53-a39f-7cf9fdc04f45"),
                            Language = "en",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("3adff99b-8266-40da-82e3-91b30e04e668"),
                            CityId = new Guid("28fbc37c-aaaf-4e24-90ba-16b6744e02a7"),
                            Language = "en",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("4b9f7d47-0284-492e-adee-2148b6bc4242"),
                            CityId = new Guid("0e41c7b9-6fd1-4116-9663-5b15118d983a"),
                            Language = "en",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("6fb70dbc-7a36-431c-92e3-e0262978b794"),
                            CityId = new Guid("ef4fe01b-068d-4093-bc62-652be648ed70"),
                            Language = "en",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("83d4f535-74c6-47ce-96ef-81c748146184"),
                            CityId = new Guid("af43aef1-f59b-4cc6-b646-9fe9b0dfedad"),
                            Language = "en",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("70740aaf-712e-4df3-b4a8-06283a16b911"),
                            CityId = new Guid("1b4948db-2436-4f0b-83ba-44ed8c1ae6fd"),
                            Language = "en",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("c9048ba1-fab1-4f49-b261-8a66f8d5333a"),
                            CityId = new Guid("a3ba1f4b-ce75-45e4-9637-5c55e1636a3d"),
                            Language = "en",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("64db1f77-f60f-495e-b9a7-71a5eadc2267"),
                            CityId = new Guid("7bc9910d-096f-48bf-b8d2-7d77d58003fe"),
                            Language = "en",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("b26aefe1-159e-4f52-8905-eee145d934a4"),
                            CityId = new Guid("4abcb4ba-4f7a-4107-95ac-e1f303645607"),
                            Language = "en",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("f8a0e788-0236-4065-a9b9-e77a55a0a34d"),
                            CityId = new Guid("44274150-ff1f-4487-9ac2-2e021a4c8cc4"),
                            Language = "en",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("1e9910ac-8cca-431a-8b62-15cce9e0f333"),
                            CityId = new Guid("50d118a6-229b-400c-86fd-08ffe25543c2"),
                            Language = "en",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("4e98186c-386e-488b-b629-9a2e094cb77d"),
                            CityId = new Guid("e94b8435-5a6e-4065-99bb-1b37569b672e"),
                            Language = "en",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("53475a40-7b08-48c5-b6a2-aebc589f7bb9"),
                            CityId = new Guid("3dd2a55a-002c-4dbf-88b4-798bc5101c98"),
                            Language = "en",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("4e8ed5ec-8a3f-4d0a-9b68-a14ad901de9c"),
                            CityId = new Guid("83f97f88-7152-4503-903f-ee13b6a4d2e1"),
                            Language = "en",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("d208e8a7-9c56-4861-acb7-818019789bd7"),
                            CityId = new Guid("d37a8a4d-3519-46da-a355-27566647e6db"),
                            Language = "en",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("8ff2523e-15c3-42a8-b896-6fc0c87acc99"),
                            CityId = new Guid("21a9a703-424d-452d-b93b-0edbfb275b57"),
                            Language = "en",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("e5f78195-c194-47f5-8603-d6c032193ab0"),
                            CityId = new Guid("8dd47a2d-3e4a-4c9b-b78c-1b6bfd91c904"),
                            Language = "en",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("816cb7e4-44cf-4ce2-be08-56a7e65905f4"),
                            CityId = new Guid("0bc1dcc9-92a4-48b0-bf2f-3ec992457a06"),
                            Language = "en",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("d3749bcc-c2b1-4589-b881-75a0c52bc874"),
                            CityId = new Guid("b9e74a3e-4b14-4770-9fb0-bcacb4e95717"),
                            Language = "en",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("50296c16-4aeb-487e-913e-9e5d9ee0e18e"),
                            CityId = new Guid("215c4ce6-551a-4044-86ed-b0ca8a820a1b"),
                            Language = "en",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("d418410f-989b-4356-b406-31fa951d395f"),
                            CityId = new Guid("4b34c4db-9a53-4e0e-b65a-0f6f60d3ff07"),
                            Language = "en",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("efdd3ea1-2163-4ff5-b070-cd4a7c505a11"),
                            CityId = new Guid("c13b93a5-cea8-4338-971e-b5d167087732"),
                            Language = "en",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("d98c1acd-03b2-4728-8c36-475bf68ad689"),
                            CityId = new Guid("84aef2db-6963-42d8-ba28-7c3ffa61bbcb"),
                            Language = "uk",
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = new Guid("836936e9-7aa4-4385-9053-4405cba37a62"),
                            CityId = new Guid("b0057160-04ea-4c1d-ab49-18a2ed3a1015"),
                            Language = "uk",
                            Name = "Люблін"
                        },
                        new
                        {
                            Id = new Guid("a2972cda-cf71-4ee9-a0dd-701472c031fa"),
                            CityId = new Guid("84aef2db-6963-42d8-ba28-7c3ffa61bbcb"),
                            Language = "en",
                            Name = "Varshava"
                        },
                        new
                        {
                            Id = new Guid("e6530715-a6b0-45e1-b5fa-09f1d0a88fed"),
                            CityId = new Guid("b0057160-04ea-4c1d-ab49-18a2ed3a1015"),
                            Language = "en",
                            Name = "Lublin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            ISO = "uk"
                        },
                        new
                        {
                            Id = new Guid("a1da13e7-d739-4622-9667-0a6b4f8aefa3"),
                            ISO = "pl"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a3172bce-d681-40a3-b86f-8c7bfba6c710"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            Language = "en",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("3d2e03fa-6acf-4bb4-afea-99ebc463ee55"),
                            CountryId = new Guid("55877523-31a9-4655-b2c4-8d8c31a30e7b"),
                            Language = "uk",
                            Name = "Україна"
                        },
                        new
                        {
                            Id = new Guid("e2216e02-f7f4-469a-b7cf-88e5abdfb9b5"),
                            CountryId = new Guid("a1da13e7-d739-4622-9667-0a6b4f8aefa3"),
                            Language = "en",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("3a582382-acaa-4dd4-9152-1381aedd8835"),
                            CountryId = new Guid("a1da13e7-d739-4622-9667-0a6b4f8aefa3"),
                            Language = "uk",
                            Name = "Польша"
                        });
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51e83f1e-2a4b-4a43-82ea-8799f437e0bb"),
                            Title = "medicine"
                        },
                        new
                        {
                            Id = new Guid("fa2487a0-f874-4a58-b314-6e8212bcce1a"),
                            Title = "cook"
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cff2fd2a-a84e-4201-abb4-e74037a3fc4e"),
                            CityId = new Guid("da404957-d921-4c53-a39f-7cf9fdc04f45"),
                            DateOfBirth = new DateTime(2023, 4, 24, 15, 14, 18, 70, DateTimeKind.Local).AddTicks(2348),
                            FirstName = "the first",
                            LastName = "admin",
                            Login = "ourfirstadmin",
                            Password = "Rk/ryiBNbnHx+s9i1IveCNNw4axYPQHm4T1eratfQlg=",
                            Phone = "+11111111111",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithOne("ProfilePicture")
                        .HasForeignKey("DAL.Entities.ProfilePicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("Volunteers")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Volunteers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Navigation("CityTranslations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ProfilePicture");

                    b.Navigation("UserSkills");

                    b.Navigation("Volunteers");
                });
#pragma warning restore 612, 618
        }
    }
}
