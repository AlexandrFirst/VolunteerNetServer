// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(VolunteerNetServerDBContext))]
    partial class VolunteerNetServerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("RequiredNumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a5b8e47-eeae-4ce5-8843-ada8b9eb8f8d"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "vi"
                        },
                        new
                        {
                            Id = new Guid("0e0530ad-f180-47a8-811c-fadd0ac59251"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "dn"
                        },
                        new
                        {
                            Id = new Guid("2a68db21-dcc1-4bd2-beb9-d1ba44468bd6"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "zhy"
                        },
                        new
                        {
                            Id = new Guid("25777b82-798b-46ff-8e79-5d9eee60b090"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "zp"
                        },
                        new
                        {
                            Id = new Guid("e50cfd5c-f728-43c2-9474-5cc744295f29"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "if"
                        },
                        new
                        {
                            Id = new Guid("1963d595-2df5-4bf3-95e3-e50bf2151277"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "ky"
                        },
                        new
                        {
                            Id = new Guid("ca75b4ab-3fdb-4974-8f9e-382ec320654b"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "kr"
                        },
                        new
                        {
                            Id = new Guid("b9bbe674-e9a7-4464-86ff-df7e850bf7f1"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "lut"
                        },
                        new
                        {
                            Id = new Guid("4324eb80-49d0-4118-8e34-14f80f71f027"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "lv"
                        },
                        new
                        {
                            Id = new Guid("34700f20-3e77-4ad2-af01-c93c851dcdd7"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "my"
                        },
                        new
                        {
                            Id = new Guid("a837f771-78d3-495d-bed6-ef9162d444ac"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "od"
                        },
                        new
                        {
                            Id = new Guid("56a792e5-7166-4269-a5d4-b5d9a0e3a960"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "pol"
                        },
                        new
                        {
                            Id = new Guid("dd2bda82-ff64-40e6-be42-51f79f53c05e"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "ri"
                        },
                        new
                        {
                            Id = new Guid("5eaa27aa-319b-4f2f-a068-f852531b80ad"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "su"
                        },
                        new
                        {
                            Id = new Guid("05a12e22-f5c3-4c69-a2b5-b65cd118c752"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "ter"
                        },
                        new
                        {
                            Id = new Guid("b2fbebf7-5c37-4a68-8869-b98cdfd34616"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "uzh"
                        },
                        new
                        {
                            Id = new Guid("15ad2297-c9dc-4d29-97ce-7e668cbb1d38"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "khar"
                        },
                        new
                        {
                            Id = new Guid("127e6bf5-9cb4-4219-aa99-85e678864ed5"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "kher"
                        },
                        new
                        {
                            Id = new Guid("eb734b8e-e223-4eb1-addf-7960dc06ddc4"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "khm"
                        },
                        new
                        {
                            Id = new Guid("21392d0c-2b1c-4f29-bb75-13cbeb445e47"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "chk"
                        },
                        new
                        {
                            Id = new Guid("71c6eec0-012b-4436-9e9f-882d00f83f16"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "chv"
                        },
                        new
                        {
                            Id = new Guid("30e2cf2d-0d07-4da8-9d83-e6383ce63b73"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "chh"
                        },
                        new
                        {
                            Id = new Guid("ad32f639-0a8a-4bef-ab88-53d45b8c2814"),
                            CountryId = new Guid("5c19215f-fae7-4a65-a084-ccf7747cd124"),
                            ISO = "var"
                        },
                        new
                        {
                            Id = new Guid("2d50b9de-cdc5-40b9-8ee2-1db6db29ecf6"),
                            CountryId = new Guid("5c19215f-fae7-4a65-a084-ccf7747cd124"),
                            ISO = "lub"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4c902c82-4d71-4681-8776-948b41f672f7"),
                            CityId = new Guid("9a5b8e47-eeae-4ce5-8843-ada8b9eb8f8d"),
                            Language = "uk",
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = new Guid("4f1ca3d6-cdab-467e-a39a-1b5dd1e712a3"),
                            CityId = new Guid("0e0530ad-f180-47a8-811c-fadd0ac59251"),
                            Language = "uk",
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = new Guid("09d167b2-786b-4a68-bab6-49601239855f"),
                            CityId = new Guid("2a68db21-dcc1-4bd2-beb9-d1ba44468bd6"),
                            Language = "uk",
                            Name = "Житомир"
                        },
                        new
                        {
                            Id = new Guid("8a42ba60-10b9-4db0-a97c-3f8228f7625b"),
                            CityId = new Guid("25777b82-798b-46ff-8e79-5d9eee60b090"),
                            Language = "uk",
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = new Guid("5187fae3-369d-4e3f-afef-9cc8a97a70e6"),
                            CityId = new Guid("e50cfd5c-f728-43c2-9474-5cc744295f29"),
                            Language = "uk",
                            Name = "Івано-Франківськ"
                        },
                        new
                        {
                            Id = new Guid("e9ca9b6b-df9d-4a2a-826d-f574b94c7a5f"),
                            CityId = new Guid("1963d595-2df5-4bf3-95e3-e50bf2151277"),
                            Language = "uk",
                            Name = "Київ"
                        },
                        new
                        {
                            Id = new Guid("5ae4c8a2-2918-48e5-bd21-fa7aedfb39b6"),
                            CityId = new Guid("ca75b4ab-3fdb-4974-8f9e-382ec320654b"),
                            Language = "uk",
                            Name = "Кропивницький"
                        },
                        new
                        {
                            Id = new Guid("353fb47a-373d-4d36-8134-c990c21442c8"),
                            CityId = new Guid("b9bbe674-e9a7-4464-86ff-df7e850bf7f1"),
                            Language = "uk",
                            Name = "Луцьк"
                        },
                        new
                        {
                            Id = new Guid("5a1fcf66-7b57-4e64-bd06-44542ed0a9eb"),
                            CityId = new Guid("4324eb80-49d0-4118-8e34-14f80f71f027"),
                            Language = "uk",
                            Name = "Львів"
                        },
                        new
                        {
                            Id = new Guid("86c651aa-b680-4d9b-b340-6f725e17594c"),
                            CityId = new Guid("34700f20-3e77-4ad2-af01-c93c851dcdd7"),
                            Language = "uk",
                            Name = "Миколаїв"
                        },
                        new
                        {
                            Id = new Guid("1df94653-13de-4286-b327-89371aa3baf3"),
                            CityId = new Guid("a837f771-78d3-495d-bed6-ef9162d444ac"),
                            Language = "uk",
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = new Guid("10188182-c6eb-465b-a7d3-6a89cf7e1a45"),
                            CityId = new Guid("56a792e5-7166-4269-a5d4-b5d9a0e3a960"),
                            Language = "uk",
                            Name = "Полтава"
                        },
                        new
                        {
                            Id = new Guid("aef25643-0c95-4491-ba95-81d2bfa22244"),
                            CityId = new Guid("dd2bda82-ff64-40e6-be42-51f79f53c05e"),
                            Language = "uk",
                            Name = "Рівне"
                        },
                        new
                        {
                            Id = new Guid("14950546-282f-453a-a2d3-15018b2b0e5c"),
                            CityId = new Guid("5eaa27aa-319b-4f2f-a068-f852531b80ad"),
                            Language = "uk",
                            Name = "Суми"
                        },
                        new
                        {
                            Id = new Guid("809ae962-8ec1-486a-a7ac-34b23dd3170c"),
                            CityId = new Guid("05a12e22-f5c3-4c69-a2b5-b65cd118c752"),
                            Language = "uk",
                            Name = "Тернопіль"
                        },
                        new
                        {
                            Id = new Guid("68a927da-1180-40ca-bc73-28a237c0245c"),
                            CityId = new Guid("b2fbebf7-5c37-4a68-8869-b98cdfd34616"),
                            Language = "uk",
                            Name = "Ужгород"
                        },
                        new
                        {
                            Id = new Guid("96eb10e8-6b27-42cf-bee5-cdef94725b16"),
                            CityId = new Guid("15ad2297-c9dc-4d29-97ce-7e668cbb1d38"),
                            Language = "uk",
                            Name = "Харків"
                        },
                        new
                        {
                            Id = new Guid("7eb32d91-feb7-4b45-b1e0-95da209bdb5e"),
                            CityId = new Guid("127e6bf5-9cb4-4219-aa99-85e678864ed5"),
                            Language = "uk",
                            Name = "Херсон"
                        },
                        new
                        {
                            Id = new Guid("8b3ddb96-4990-4a5d-b481-40a5f1a128b8"),
                            CityId = new Guid("eb734b8e-e223-4eb1-addf-7960dc06ddc4"),
                            Language = "uk",
                            Name = "Хмельницький"
                        },
                        new
                        {
                            Id = new Guid("d945082f-0d45-4198-8dad-1ff7e05eae39"),
                            CityId = new Guid("21392d0c-2b1c-4f29-bb75-13cbeb445e47"),
                            Language = "uk",
                            Name = "Черкаси"
                        },
                        new
                        {
                            Id = new Guid("94621098-d060-4171-83b3-6b67fa3a1c2b"),
                            CityId = new Guid("71c6eec0-012b-4436-9e9f-882d00f83f16"),
                            Language = "uk",
                            Name = "Чернівці"
                        },
                        new
                        {
                            Id = new Guid("55fdda02-a16f-4b84-a2fb-c15af2d64996"),
                            CityId = new Guid("30e2cf2d-0d07-4da8-9d83-e6383ce63b73"),
                            Language = "uk",
                            Name = "Чернігів"
                        },
                        new
                        {
                            Id = new Guid("6dc08f1c-42e5-42a1-80c8-0523af7082db"),
                            CityId = new Guid("9a5b8e47-eeae-4ce5-8843-ada8b9eb8f8d"),
                            Language = "en",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("08a1c873-a161-4cdb-b4b3-8b054e93f8c8"),
                            CityId = new Guid("0e0530ad-f180-47a8-811c-fadd0ac59251"),
                            Language = "en",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("97c5e1cf-3d6b-4000-980d-92eb890a8288"),
                            CityId = new Guid("2a68db21-dcc1-4bd2-beb9-d1ba44468bd6"),
                            Language = "en",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("7c30c247-f499-4978-973f-9c4b95c70027"),
                            CityId = new Guid("25777b82-798b-46ff-8e79-5d9eee60b090"),
                            Language = "en",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("d48ffa92-086e-46eb-abfd-fe43b0f16c69"),
                            CityId = new Guid("e50cfd5c-f728-43c2-9474-5cc744295f29"),
                            Language = "en",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("5a21504b-4097-41cc-a476-99759d8c187b"),
                            CityId = new Guid("1963d595-2df5-4bf3-95e3-e50bf2151277"),
                            Language = "en",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("0ff89b52-3b4d-43bf-9e35-7b28e697a9be"),
                            CityId = new Guid("ca75b4ab-3fdb-4974-8f9e-382ec320654b"),
                            Language = "en",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("9b11140c-8c63-4dbb-8e09-f8560e89ea30"),
                            CityId = new Guid("b9bbe674-e9a7-4464-86ff-df7e850bf7f1"),
                            Language = "en",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("126712ea-592d-496f-88c1-1d4f3e9ceffd"),
                            CityId = new Guid("4324eb80-49d0-4118-8e34-14f80f71f027"),
                            Language = "en",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("94d3d8f7-e280-4bb9-a75a-d82f167ef928"),
                            CityId = new Guid("34700f20-3e77-4ad2-af01-c93c851dcdd7"),
                            Language = "en",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("caddd4a7-3285-4732-8241-a25931c8e6bc"),
                            CityId = new Guid("a837f771-78d3-495d-bed6-ef9162d444ac"),
                            Language = "en",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("e9a4463f-a970-44c0-917e-c5f24b0c313f"),
                            CityId = new Guid("56a792e5-7166-4269-a5d4-b5d9a0e3a960"),
                            Language = "en",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("cbd921c8-549b-4e6a-981d-fb0f58cbe2b4"),
                            CityId = new Guid("dd2bda82-ff64-40e6-be42-51f79f53c05e"),
                            Language = "en",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("753667c9-6121-4866-9c40-2b92e7a4acd3"),
                            CityId = new Guid("5eaa27aa-319b-4f2f-a068-f852531b80ad"),
                            Language = "en",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("f637d796-9c3b-4e47-9c78-04d1223f4467"),
                            CityId = new Guid("05a12e22-f5c3-4c69-a2b5-b65cd118c752"),
                            Language = "en",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("729c660c-2ddc-4756-ad5c-c71be04f511e"),
                            CityId = new Guid("b2fbebf7-5c37-4a68-8869-b98cdfd34616"),
                            Language = "en",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("51aa6d3c-54c2-43f7-9fea-177c8b6573fa"),
                            CityId = new Guid("15ad2297-c9dc-4d29-97ce-7e668cbb1d38"),
                            Language = "en",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("8183d17b-47f0-445d-bdc8-91b1d3785b35"),
                            CityId = new Guid("127e6bf5-9cb4-4219-aa99-85e678864ed5"),
                            Language = "en",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("05435a4c-f006-47c0-9ede-45600efb9c11"),
                            CityId = new Guid("eb734b8e-e223-4eb1-addf-7960dc06ddc4"),
                            Language = "en",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("8d754d7f-60ec-4ab0-b19d-bb725a67fe13"),
                            CityId = new Guid("21392d0c-2b1c-4f29-bb75-13cbeb445e47"),
                            Language = "en",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("41964212-5257-4994-ac6f-c7cfd6f8c5f1"),
                            CityId = new Guid("71c6eec0-012b-4436-9e9f-882d00f83f16"),
                            Language = "en",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("131dab1f-a578-43f1-a182-efbf8a2a0ef8"),
                            CityId = new Guid("30e2cf2d-0d07-4da8-9d83-e6383ce63b73"),
                            Language = "en",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("ec89d3af-d1f1-495d-9c8a-50622f9dd61b"),
                            CityId = new Guid("ad32f639-0a8a-4bef-ab88-53d45b8c2814"),
                            Language = "uk",
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = new Guid("7f735e7e-de68-4c58-a466-7e3d9c0015b8"),
                            CityId = new Guid("2d50b9de-cdc5-40b9-8ee2-1db6db29ecf6"),
                            Language = "uk",
                            Name = "Люблін"
                        },
                        new
                        {
                            Id = new Guid("f9d51154-56ab-4cf3-b66f-e30e5e91dfb3"),
                            CityId = new Guid("ad32f639-0a8a-4bef-ab88-53d45b8c2814"),
                            Language = "en",
                            Name = "Varshava"
                        },
                        new
                        {
                            Id = new Guid("4aa2af7c-f2e8-47fc-9d54-9810c9f19d1c"),
                            CityId = new Guid("2d50b9de-cdc5-40b9-8ee2-1db6db29ecf6"),
                            Language = "en",
                            Name = "Lublin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            ISO = "uk"
                        },
                        new
                        {
                            Id = new Guid("5c19215f-fae7-4a65-a084-ccf7747cd124"),
                            ISO = "pl"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d03374f5-52bc-47ef-bf20-7bb6cfd05f10"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            Language = "en",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("ca5c65ef-9d68-4c3e-9e7d-f4e5f1b7025c"),
                            CountryId = new Guid("61c9af51-12ef-4da9-ae94-068f5d94922b"),
                            Language = "uk",
                            Name = "Україна"
                        },
                        new
                        {
                            Id = new Guid("5bdec72c-564a-4c8a-87ce-b812b669ab84"),
                            CountryId = new Guid("5c19215f-fae7-4a65-a084-ccf7747cd124"),
                            Language = "en",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("d17aa06e-6f36-4aab-b094-99efaddfdd52"),
                            CountryId = new Guid("5c19215f-fae7-4a65-a084-ccf7747cd124"),
                            Language = "uk",
                            Name = "Польша"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VolunteerApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VolunteerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerUserId", "VolunteerApplicationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("518c2fb1-d3f5-428d-b6e4-ea5f15e6fb82"),
                            Title = "medicine"
                        },
                        new
                        {
                            Id = new Guid("3eaec87f-d6a6-4dfb-9217-db0493101836"),
                            Title = "cooking"
                        },
                        new
                        {
                            Id = new Guid("0c08734b-8bed-460b-a173-d0dedc8f581e"),
                            Title = "building"
                        },
                        new
                        {
                            Id = new Guid("1476a5d3-d28b-430c-8a1a-4762b075017a"),
                            Title = "psychology"
                        });
                });

            modelBuilder.Entity("DAL.Entities.SkillTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("782c1b79-2218-492a-bb8f-d5cfc32a9789"),
                            Language = "en",
                            Name = "medicine",
                            SkillId = new Guid("518c2fb1-d3f5-428d-b6e4-ea5f15e6fb82")
                        },
                        new
                        {
                            Id = new Guid("90d07a71-d27d-4625-be63-28e90d5e185f"),
                            Language = "uk",
                            Name = "медицина",
                            SkillId = new Guid("518c2fb1-d3f5-428d-b6e4-ea5f15e6fb82")
                        },
                        new
                        {
                            Id = new Guid("2dfb5ef1-5274-42eb-b4c1-0d94de0dbf23"),
                            Language = "en",
                            Name = "cooking",
                            SkillId = new Guid("3eaec87f-d6a6-4dfb-9217-db0493101836")
                        },
                        new
                        {
                            Id = new Guid("f2c77f2a-df56-403d-b425-36f38619d4fa"),
                            Language = "uk",
                            Name = "кулінарія",
                            SkillId = new Guid("3eaec87f-d6a6-4dfb-9217-db0493101836")
                        },
                        new
                        {
                            Id = new Guid("1547f492-c4bd-494e-89ca-a5047b93d1ad"),
                            Language = "en",
                            Name = "building",
                            SkillId = new Guid("0c08734b-8bed-460b-a173-d0dedc8f581e")
                        },
                        new
                        {
                            Id = new Guid("32249ff7-c7b4-4b28-81d2-e4ab930055cd"),
                            Language = "uk",
                            Name = "будівництво",
                            SkillId = new Guid("0c08734b-8bed-460b-a173-d0dedc8f581e")
                        },
                        new
                        {
                            Id = new Guid("41df599d-4da2-4949-82dd-2bd219c5b672"),
                            Language = "en",
                            Name = "psychology",
                            SkillId = new Guid("1476a5d3-d28b-430c-8a1a-4762b075017a")
                        },
                        new
                        {
                            Id = new Guid("d5a84219-5f29-4d4e-ad02-63a4244719f3"),
                            Language = "uk",
                            Name = "психологія",
                            SkillId = new Guid("1476a5d3-d28b-430c-8a1a-4762b075017a")
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c97202e-4f74-4c5d-bcd4-0a53a46f9660"),
                            CityId = new Guid("9a5b8e47-eeae-4ce5-8843-ada8b9eb8f8d"),
                            DateOfBirth = new DateTime(2023, 4, 28, 22, 26, 40, 843, DateTimeKind.Local).AddTicks(7189),
                            FirstName = "the first",
                            LastName = "admin",
                            Login = "ourfirstadmin",
                            Password = "Rk/ryiBNbnHx+s9i1IveCNNw4axYPQHm4T1eratfQlg=",
                            Phone = "+11111111111",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.Message", b =>
                {
                    b.HasOne("DAL.Entities.Volunteer", "Volunteer")
                        .WithMany("Messages")
                        .HasForeignKey("VolunteerUserId", "VolunteerApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithOne("ProfilePicture")
                        .HasForeignKey("DAL.Entities.ProfilePicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.SkillTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("SkillTranslations")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("Volunteers")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Volunteers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Navigation("CityTranslations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Navigation("SkillTranslations");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ProfilePicture");

                    b.Navigation("UserSkills");

                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
