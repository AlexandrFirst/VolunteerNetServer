// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(VolunteerNetServerDBContext))]
    partial class VolunteerNetServerDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("RequiredNumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5afca0c8-e537-4d17-b08e-96f99e4cc8c1"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "vi"
                        },
                        new
                        {
                            Id = new Guid("1fbc2dba-18b6-4e0a-8f27-6d2d1b8dd70c"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "dn"
                        },
                        new
                        {
                            Id = new Guid("ed1173b7-ce8b-40ff-9f28-e53312ba8954"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "zhy"
                        },
                        new
                        {
                            Id = new Guid("3ced847e-a8ed-4218-bcfe-6b5e79df8b06"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "zp"
                        },
                        new
                        {
                            Id = new Guid("d6c6a119-3bd4-4704-bd39-713d49258996"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "if"
                        },
                        new
                        {
                            Id = new Guid("40d7c2b4-ecad-4c9e-a49b-694cae3e7b3c"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "ky"
                        },
                        new
                        {
                            Id = new Guid("57ccc51d-838e-41ca-a938-525ccf594575"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "kr"
                        },
                        new
                        {
                            Id = new Guid("9a53061c-f6fa-47a9-984d-68bd207bbe63"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "lut"
                        },
                        new
                        {
                            Id = new Guid("f442a29c-4f82-4aa7-9689-b88680eaef93"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "lv"
                        },
                        new
                        {
                            Id = new Guid("e8e38952-a6ab-45b4-8c24-f17a45bd515f"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "my"
                        },
                        new
                        {
                            Id = new Guid("bb19cb49-98ed-4d4a-b203-b84e9c1a3c75"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "od"
                        },
                        new
                        {
                            Id = new Guid("01331e3d-c2d4-4f2c-9296-2205735e4b1a"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "pol"
                        },
                        new
                        {
                            Id = new Guid("8848c278-99f6-41b5-9c51-05999da664be"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "ri"
                        },
                        new
                        {
                            Id = new Guid("778c5508-38ee-4a59-9b27-2b150510041c"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "su"
                        },
                        new
                        {
                            Id = new Guid("cd868940-1ee9-4aba-858e-997ad20b60a7"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "ter"
                        },
                        new
                        {
                            Id = new Guid("ef97b43b-525c-4a53-8828-cd9c96f2ee42"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "uzh"
                        },
                        new
                        {
                            Id = new Guid("9d2415a6-4687-4203-a267-69e1752d4a24"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "khar"
                        },
                        new
                        {
                            Id = new Guid("f587378b-09bf-4659-86c8-038b3160d0b3"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "kher"
                        },
                        new
                        {
                            Id = new Guid("ef4d43cd-e75c-4a72-9ae5-9c8b7e8fce72"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "khm"
                        },
                        new
                        {
                            Id = new Guid("4d655442-e406-4f5d-99b7-86a37d2cf4d8"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "chk"
                        },
                        new
                        {
                            Id = new Guid("774d5c09-d3f7-4c45-af81-cc9113da435e"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "chv"
                        },
                        new
                        {
                            Id = new Guid("463fad84-1917-43ab-943a-2446b7d12be8"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "chh"
                        },
                        new
                        {
                            Id = new Guid("9fb59cfd-76ab-4165-83c3-961851b7315d"),
                            CountryId = new Guid("129efdf6-5bea-4767-8fab-97f7925de5c4"),
                            ISO = "var"
                        },
                        new
                        {
                            Id = new Guid("bb7c6234-2c3b-42ea-9ae7-5be22b630dad"),
                            CountryId = new Guid("129efdf6-5bea-4767-8fab-97f7925de5c4"),
                            ISO = "lub"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47f1d312-2698-42e1-a3e9-6141ae8c13bd"),
                            CityId = new Guid("5afca0c8-e537-4d17-b08e-96f99e4cc8c1"),
                            Language = "uk",
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = new Guid("9501cbc1-6ac5-43b6-b2ce-07014c07c383"),
                            CityId = new Guid("1fbc2dba-18b6-4e0a-8f27-6d2d1b8dd70c"),
                            Language = "uk",
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = new Guid("153a8eca-0a36-4880-a705-301cad31594e"),
                            CityId = new Guid("ed1173b7-ce8b-40ff-9f28-e53312ba8954"),
                            Language = "uk",
                            Name = "Житомир"
                        },
                        new
                        {
                            Id = new Guid("b33fe486-5962-4922-b6c4-de64bb40ef22"),
                            CityId = new Guid("3ced847e-a8ed-4218-bcfe-6b5e79df8b06"),
                            Language = "uk",
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = new Guid("60009f07-b2c8-4e6d-a5c7-6c5c6ebf7c34"),
                            CityId = new Guid("d6c6a119-3bd4-4704-bd39-713d49258996"),
                            Language = "uk",
                            Name = "Івано-Франківськ"
                        },
                        new
                        {
                            Id = new Guid("75b64f58-c0c3-4d6c-9b49-15dab9e16db2"),
                            CityId = new Guid("40d7c2b4-ecad-4c9e-a49b-694cae3e7b3c"),
                            Language = "uk",
                            Name = "Київ"
                        },
                        new
                        {
                            Id = new Guid("d359c66c-8954-49de-96f9-32d58d7feeb0"),
                            CityId = new Guid("57ccc51d-838e-41ca-a938-525ccf594575"),
                            Language = "uk",
                            Name = "Кропивницький"
                        },
                        new
                        {
                            Id = new Guid("5d92030c-b2ad-4e7b-af87-8ef9c04818e2"),
                            CityId = new Guid("9a53061c-f6fa-47a9-984d-68bd207bbe63"),
                            Language = "uk",
                            Name = "Луцьк"
                        },
                        new
                        {
                            Id = new Guid("8beed449-f2be-40bf-bb44-deaa4a66abcc"),
                            CityId = new Guid("f442a29c-4f82-4aa7-9689-b88680eaef93"),
                            Language = "uk",
                            Name = "Львів"
                        },
                        new
                        {
                            Id = new Guid("348c3ae8-a735-4efa-91a6-9105b4133176"),
                            CityId = new Guid("e8e38952-a6ab-45b4-8c24-f17a45bd515f"),
                            Language = "uk",
                            Name = "Миколаїв"
                        },
                        new
                        {
                            Id = new Guid("721695a7-160c-4fc0-a7c5-a0f497e94827"),
                            CityId = new Guid("bb19cb49-98ed-4d4a-b203-b84e9c1a3c75"),
                            Language = "uk",
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = new Guid("93bbd720-f8be-4a73-97ef-89f628e948b0"),
                            CityId = new Guid("01331e3d-c2d4-4f2c-9296-2205735e4b1a"),
                            Language = "uk",
                            Name = "Полтава"
                        },
                        new
                        {
                            Id = new Guid("99bed382-4e8e-429e-bbfe-f27a608eb914"),
                            CityId = new Guid("8848c278-99f6-41b5-9c51-05999da664be"),
                            Language = "uk",
                            Name = "Рівне"
                        },
                        new
                        {
                            Id = new Guid("7f125352-9a4d-41eb-b7d4-657e5375acd4"),
                            CityId = new Guid("778c5508-38ee-4a59-9b27-2b150510041c"),
                            Language = "uk",
                            Name = "Суми"
                        },
                        new
                        {
                            Id = new Guid("ba210f5a-373f-45b2-adad-e77a3b7cf05d"),
                            CityId = new Guid("cd868940-1ee9-4aba-858e-997ad20b60a7"),
                            Language = "uk",
                            Name = "Тернопіль"
                        },
                        new
                        {
                            Id = new Guid("7ce2d04c-40c5-401a-b945-219f92fbd52f"),
                            CityId = new Guid("ef97b43b-525c-4a53-8828-cd9c96f2ee42"),
                            Language = "uk",
                            Name = "Ужгород"
                        },
                        new
                        {
                            Id = new Guid("67dbb00b-ad31-4a33-9ae0-c28b2fda292d"),
                            CityId = new Guid("9d2415a6-4687-4203-a267-69e1752d4a24"),
                            Language = "uk",
                            Name = "Харків"
                        },
                        new
                        {
                            Id = new Guid("6aed6c00-c913-4773-97be-26ba00e5a392"),
                            CityId = new Guid("f587378b-09bf-4659-86c8-038b3160d0b3"),
                            Language = "uk",
                            Name = "Херсон"
                        },
                        new
                        {
                            Id = new Guid("caf8da75-822c-4c15-8e11-55773ee5468a"),
                            CityId = new Guid("ef4d43cd-e75c-4a72-9ae5-9c8b7e8fce72"),
                            Language = "uk",
                            Name = "Хмельницький"
                        },
                        new
                        {
                            Id = new Guid("dba0baf6-a6d7-4b6e-878a-39abc26c5d54"),
                            CityId = new Guid("4d655442-e406-4f5d-99b7-86a37d2cf4d8"),
                            Language = "uk",
                            Name = "Черкаси"
                        },
                        new
                        {
                            Id = new Guid("46882d7f-8d2b-4e4a-a7b7-10899effd726"),
                            CityId = new Guid("774d5c09-d3f7-4c45-af81-cc9113da435e"),
                            Language = "uk",
                            Name = "Чернівці"
                        },
                        new
                        {
                            Id = new Guid("f323ab58-93da-4f36-a0b7-7dc39abb644d"),
                            CityId = new Guid("463fad84-1917-43ab-943a-2446b7d12be8"),
                            Language = "uk",
                            Name = "Чернігів"
                        },
                        new
                        {
                            Id = new Guid("93524438-fedc-47f2-8d6a-c8988fafc25b"),
                            CityId = new Guid("5afca0c8-e537-4d17-b08e-96f99e4cc8c1"),
                            Language = "en",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("3bd2f32f-2ed8-445a-9a90-31ba01407e97"),
                            CityId = new Guid("1fbc2dba-18b6-4e0a-8f27-6d2d1b8dd70c"),
                            Language = "en",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("4c1ac5ba-f948-47d5-8493-031291286871"),
                            CityId = new Guid("ed1173b7-ce8b-40ff-9f28-e53312ba8954"),
                            Language = "en",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("65f5ac76-f407-4ae4-894e-36151638a67b"),
                            CityId = new Guid("3ced847e-a8ed-4218-bcfe-6b5e79df8b06"),
                            Language = "en",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("dc877c4e-5271-412b-9f87-8c52621af3db"),
                            CityId = new Guid("d6c6a119-3bd4-4704-bd39-713d49258996"),
                            Language = "en",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("bfb9818d-5762-4dfb-9b55-73cf32f39367"),
                            CityId = new Guid("40d7c2b4-ecad-4c9e-a49b-694cae3e7b3c"),
                            Language = "en",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("d25d265c-dcd6-4a5c-bb90-5074a74c3f8a"),
                            CityId = new Guid("57ccc51d-838e-41ca-a938-525ccf594575"),
                            Language = "en",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("98e851cd-99fc-4237-baba-996573bf2f48"),
                            CityId = new Guid("9a53061c-f6fa-47a9-984d-68bd207bbe63"),
                            Language = "en",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("0aadc5fe-e9fd-464b-af8e-cf4055d15885"),
                            CityId = new Guid("f442a29c-4f82-4aa7-9689-b88680eaef93"),
                            Language = "en",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("6288b79e-dfa2-46b3-8080-adefa30c05e4"),
                            CityId = new Guid("e8e38952-a6ab-45b4-8c24-f17a45bd515f"),
                            Language = "en",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("9c1fc5ae-8b70-464c-9761-b4e69a405f1a"),
                            CityId = new Guid("bb19cb49-98ed-4d4a-b203-b84e9c1a3c75"),
                            Language = "en",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("24122ae4-f1cc-4e1b-b495-a7ae67f6b2bd"),
                            CityId = new Guid("01331e3d-c2d4-4f2c-9296-2205735e4b1a"),
                            Language = "en",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("1a9f78d3-891a-4496-8845-ed23b0a3738a"),
                            CityId = new Guid("8848c278-99f6-41b5-9c51-05999da664be"),
                            Language = "en",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("5a849e7b-d589-4d10-9e76-b10c295dd1a1"),
                            CityId = new Guid("778c5508-38ee-4a59-9b27-2b150510041c"),
                            Language = "en",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("22b6e9ec-63e1-4bbf-881f-94a712e3c43e"),
                            CityId = new Guid("cd868940-1ee9-4aba-858e-997ad20b60a7"),
                            Language = "en",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("9dce8ef5-93a1-45b5-9542-ced5ec478c22"),
                            CityId = new Guid("ef97b43b-525c-4a53-8828-cd9c96f2ee42"),
                            Language = "en",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("d89d5868-5a8e-4629-929c-e6fcc054d490"),
                            CityId = new Guid("9d2415a6-4687-4203-a267-69e1752d4a24"),
                            Language = "en",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("e2883d65-ddeb-4ae8-b585-e24e9e3eb167"),
                            CityId = new Guid("f587378b-09bf-4659-86c8-038b3160d0b3"),
                            Language = "en",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("9bfeaaee-1688-48d7-8ca6-6230a53e9988"),
                            CityId = new Guid("ef4d43cd-e75c-4a72-9ae5-9c8b7e8fce72"),
                            Language = "en",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("cfe4c868-a333-4c3e-8119-bffd998e5de8"),
                            CityId = new Guid("4d655442-e406-4f5d-99b7-86a37d2cf4d8"),
                            Language = "en",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("9808bc29-b36b-4b1f-95f9-cecd2a56dc91"),
                            CityId = new Guid("774d5c09-d3f7-4c45-af81-cc9113da435e"),
                            Language = "en",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("d5cec7a7-17fa-4f87-a3dd-83092ba68715"),
                            CityId = new Guid("463fad84-1917-43ab-943a-2446b7d12be8"),
                            Language = "en",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("529ff0d9-6bae-4432-9ccd-20b04dc0cea0"),
                            CityId = new Guid("9fb59cfd-76ab-4165-83c3-961851b7315d"),
                            Language = "uk",
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = new Guid("cecb49a2-67ad-46c9-a1a5-e4b3a585f49b"),
                            CityId = new Guid("bb7c6234-2c3b-42ea-9ae7-5be22b630dad"),
                            Language = "uk",
                            Name = "Люблін"
                        },
                        new
                        {
                            Id = new Guid("89b13458-f824-4ec5-a571-1de81a2599a0"),
                            CityId = new Guid("9fb59cfd-76ab-4165-83c3-961851b7315d"),
                            Language = "en",
                            Name = "Varshava"
                        },
                        new
                        {
                            Id = new Guid("2df7ae83-bd1b-4c3a-be85-e7ade575fa9b"),
                            CityId = new Guid("bb7c6234-2c3b-42ea-9ae7-5be22b630dad"),
                            Language = "en",
                            Name = "Lublin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            ISO = "uk"
                        },
                        new
                        {
                            Id = new Guid("129efdf6-5bea-4767-8fab-97f7925de5c4"),
                            ISO = "pl"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db8da78f-bd45-4d6d-85ee-ac5321c420af"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            Language = "en",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("28125b9b-2578-497c-b2b6-d48242390fc4"),
                            CountryId = new Guid("92bfd562-df99-49c0-9670-c34a51e37772"),
                            Language = "uk",
                            Name = "Україна"
                        },
                        new
                        {
                            Id = new Guid("185da1d9-fb24-4c8c-8a07-967ba3d99cdc"),
                            CountryId = new Guid("129efdf6-5bea-4767-8fab-97f7925de5c4"),
                            Language = "en",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("ca8d5ec8-7198-405f-805b-eff8d9c8c882"),
                            CountryId = new Guid("129efdf6-5bea-4767-8fab-97f7925de5c4"),
                            Language = "uk",
                            Name = "Польша"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VolunteerApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VolunteerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerUserId", "VolunteerApplicationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac0f0563-b401-4eda-bd6a-86ad1028a1e5"),
                            Title = "medicine"
                        },
                        new
                        {
                            Id = new Guid("9fd6c325-b504-4358-9f5f-76ec4cf73c73"),
                            Title = "cooking"
                        },
                        new
                        {
                            Id = new Guid("81bb520a-1884-4715-822f-48600f867f9c"),
                            Title = "building"
                        },
                        new
                        {
                            Id = new Guid("6955eb17-236d-457e-857c-905d32371c69"),
                            Title = "psychology"
                        });
                });

            modelBuilder.Entity("DAL.Entities.SkillTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd7e0989-c44f-45fe-a928-8aa270ff05e7"),
                            Language = "en",
                            Name = "medicine",
                            SkillId = new Guid("ac0f0563-b401-4eda-bd6a-86ad1028a1e5")
                        },
                        new
                        {
                            Id = new Guid("05e07eac-bc9c-4c19-9270-dd7cdb412b66"),
                            Language = "uk",
                            Name = "медицина",
                            SkillId = new Guid("ac0f0563-b401-4eda-bd6a-86ad1028a1e5")
                        },
                        new
                        {
                            Id = new Guid("71c57c5c-b308-4a4e-b2d2-879ccbe3d9f2"),
                            Language = "en",
                            Name = "cooking",
                            SkillId = new Guid("9fd6c325-b504-4358-9f5f-76ec4cf73c73")
                        },
                        new
                        {
                            Id = new Guid("f63afdd6-c75d-456e-a2b0-113d40fe5f39"),
                            Language = "uk",
                            Name = "кулінарія",
                            SkillId = new Guid("9fd6c325-b504-4358-9f5f-76ec4cf73c73")
                        },
                        new
                        {
                            Id = new Guid("36f52c60-3192-45dc-bc52-ec2c5621e5c3"),
                            Language = "en",
                            Name = "building",
                            SkillId = new Guid("81bb520a-1884-4715-822f-48600f867f9c")
                        },
                        new
                        {
                            Id = new Guid("f7e465ac-3fe6-4b43-9d45-2f7704df61d0"),
                            Language = "uk",
                            Name = "будівництво",
                            SkillId = new Guid("81bb520a-1884-4715-822f-48600f867f9c")
                        },
                        new
                        {
                            Id = new Guid("49b11c61-55ec-4fe6-90c6-5a458a7a38bf"),
                            Language = "en",
                            Name = "psychology",
                            SkillId = new Guid("6955eb17-236d-457e-857c-905d32371c69")
                        },
                        new
                        {
                            Id = new Guid("6da99f29-ed4f-48e7-b75d-0d8416618b0e"),
                            Language = "uk",
                            Name = "психологія",
                            SkillId = new Guid("6955eb17-236d-457e-857c-905d32371c69")
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aaab5803-b509-40b4-91c0-a239022426ae"),
                            CityId = new Guid("5afca0c8-e537-4d17-b08e-96f99e4cc8c1"),
                            DateOfBirth = new DateTime(2023, 4, 27, 22, 55, 21, 67, DateTimeKind.Local).AddTicks(5391),
                            FirstName = "the first",
                            LastName = "admin",
                            Login = "ourfirstadmin",
                            Password = "Rk/ryiBNbnHx+s9i1IveCNNw4axYPQHm4T1eratfQlg=",
                            Phone = "+11111111111",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.Message", b =>
                {
                    b.HasOne("DAL.Entities.Volunteer", "Volunteer")
                        .WithMany("Messages")
                        .HasForeignKey("VolunteerUserId", "VolunteerApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithOne("ProfilePicture")
                        .HasForeignKey("DAL.Entities.ProfilePicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.SkillTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("SkillTranslations")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("Volunteers")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Volunteers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Navigation("CityTranslations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Navigation("SkillTranslations");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ProfilePicture");

                    b.Navigation("UserSkills");

                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
