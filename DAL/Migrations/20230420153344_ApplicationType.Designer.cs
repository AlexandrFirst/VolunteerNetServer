// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(VolunteerNetServerDBContext))]
    [Migration("20230420153344_ApplicationType")]
    partial class ApplicationType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47c954f4-c369-47e4-81fe-fa19f4f9f7bb"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "vi"
                        },
                        new
                        {
                            Id = new Guid("971b613e-827e-459c-a569-f1ebac222c7f"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "dn"
                        },
                        new
                        {
                            Id = new Guid("22b1cf37-6c20-45fb-909c-0fd3479cdc6b"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "zhy"
                        },
                        new
                        {
                            Id = new Guid("bd8b9a78-a135-4547-afd1-50e6f384ac04"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "zp"
                        },
                        new
                        {
                            Id = new Guid("eda27747-447f-43dd-8415-a63a84c3d028"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "if"
                        },
                        new
                        {
                            Id = new Guid("bc283497-31f6-4c8d-b43e-1bbb4731c622"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "ky"
                        },
                        new
                        {
                            Id = new Guid("252189f1-823d-446b-9516-f91e1c6b6895"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "kr"
                        },
                        new
                        {
                            Id = new Guid("c0cccf42-fb86-4716-a8b0-1fee3104611b"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "lut"
                        },
                        new
                        {
                            Id = new Guid("81c8357f-f09a-41b3-8e6a-780216d82cc1"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "lv"
                        },
                        new
                        {
                            Id = new Guid("75cf52f1-b1f1-4031-9d6e-e3ea70861333"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "my"
                        },
                        new
                        {
                            Id = new Guid("7b43b3f0-ce21-41ff-9a99-b6399e3c0d91"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "od"
                        },
                        new
                        {
                            Id = new Guid("0742e502-aad3-4ff7-b5c9-f269a9b5d705"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "pol"
                        },
                        new
                        {
                            Id = new Guid("ec2a363e-6f2a-4c28-92ad-4a9de5aea185"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "ri"
                        },
                        new
                        {
                            Id = new Guid("ee35ffea-4fa7-4f4b-8ff8-99d0563e7345"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "su"
                        },
                        new
                        {
                            Id = new Guid("7a61e28c-9114-4d1d-9691-4538108507d8"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "ter"
                        },
                        new
                        {
                            Id = new Guid("3a546866-c259-42b6-9178-3b503412b948"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "uzh"
                        },
                        new
                        {
                            Id = new Guid("a31cc716-3d7d-46c0-b7c9-b3a5f5866db4"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "khar"
                        },
                        new
                        {
                            Id = new Guid("38b1359f-46b7-45b0-845e-d6f1fdc783b4"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "kher"
                        },
                        new
                        {
                            Id = new Guid("2414fe8c-15a6-480d-850d-32503db698f9"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "khm"
                        },
                        new
                        {
                            Id = new Guid("4efa95ff-e1ed-495b-a931-7d8c7ffaa015"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "chk"
                        },
                        new
                        {
                            Id = new Guid("47564b02-f7f7-40c6-8043-661273139f14"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "chv"
                        },
                        new
                        {
                            Id = new Guid("07e541d0-6ac4-4c0d-bda6-fe6732975ec2"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "chh"
                        },
                        new
                        {
                            Id = new Guid("d05d838b-ceb5-4205-99b0-49755f0ae71a"),
                            CountryId = new Guid("b8b23549-a017-4431-84a8-e31c2a0b52c6"),
                            ISO = "var"
                        },
                        new
                        {
                            Id = new Guid("d8c385fc-2dde-4d1b-a907-49cabdb48d39"),
                            CountryId = new Guid("b8b23549-a017-4431-84a8-e31c2a0b52c6"),
                            ISO = "lub"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f203c2f1-766b-49ac-837c-f16c7e585302"),
                            CityId = new Guid("47c954f4-c369-47e4-81fe-fa19f4f9f7bb"),
                            Language = "uk",
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = new Guid("28b111a2-d124-4e32-8759-289b843d89b5"),
                            CityId = new Guid("971b613e-827e-459c-a569-f1ebac222c7f"),
                            Language = "uk",
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = new Guid("631334e1-2642-41ce-81c7-88d64afcf7ce"),
                            CityId = new Guid("22b1cf37-6c20-45fb-909c-0fd3479cdc6b"),
                            Language = "uk",
                            Name = "Житомир"
                        },
                        new
                        {
                            Id = new Guid("a50ee315-9eac-4153-a021-5a6f66c92859"),
                            CityId = new Guid("bd8b9a78-a135-4547-afd1-50e6f384ac04"),
                            Language = "uk",
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = new Guid("e6ea604f-b991-48e8-9a44-02018c7bdbb9"),
                            CityId = new Guid("eda27747-447f-43dd-8415-a63a84c3d028"),
                            Language = "uk",
                            Name = "Івано-Франківськ"
                        },
                        new
                        {
                            Id = new Guid("53e7fc39-4572-4dfb-b364-86bc141df8a7"),
                            CityId = new Guid("bc283497-31f6-4c8d-b43e-1bbb4731c622"),
                            Language = "uk",
                            Name = "Київ"
                        },
                        new
                        {
                            Id = new Guid("dd708338-dfb7-4431-ad8f-4d8f20c393ba"),
                            CityId = new Guid("252189f1-823d-446b-9516-f91e1c6b6895"),
                            Language = "uk",
                            Name = "Кропивницький"
                        },
                        new
                        {
                            Id = new Guid("1b3e594f-eae0-4f49-ba85-6b6749321908"),
                            CityId = new Guid("c0cccf42-fb86-4716-a8b0-1fee3104611b"),
                            Language = "uk",
                            Name = "Луцьк"
                        },
                        new
                        {
                            Id = new Guid("0aba799f-a6ab-451a-86d3-1f139827e0d3"),
                            CityId = new Guid("81c8357f-f09a-41b3-8e6a-780216d82cc1"),
                            Language = "uk",
                            Name = "Львів"
                        },
                        new
                        {
                            Id = new Guid("9d9aa50d-a8e7-49a5-babe-836710b093fb"),
                            CityId = new Guid("75cf52f1-b1f1-4031-9d6e-e3ea70861333"),
                            Language = "uk",
                            Name = "Миколаїв"
                        },
                        new
                        {
                            Id = new Guid("b3bd6e91-dda1-47af-b072-8010c1ec445f"),
                            CityId = new Guid("7b43b3f0-ce21-41ff-9a99-b6399e3c0d91"),
                            Language = "uk",
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = new Guid("902855f7-56ae-4b4c-838e-e4fde3bb4f0b"),
                            CityId = new Guid("0742e502-aad3-4ff7-b5c9-f269a9b5d705"),
                            Language = "uk",
                            Name = "Полтава"
                        },
                        new
                        {
                            Id = new Guid("b83c63a5-8a17-45ed-9c0e-bed134c224ed"),
                            CityId = new Guid("ec2a363e-6f2a-4c28-92ad-4a9de5aea185"),
                            Language = "uk",
                            Name = "Рівне"
                        },
                        new
                        {
                            Id = new Guid("aca6c7ae-f4d0-4563-99d4-96c6334a445f"),
                            CityId = new Guid("ee35ffea-4fa7-4f4b-8ff8-99d0563e7345"),
                            Language = "uk",
                            Name = "Суми"
                        },
                        new
                        {
                            Id = new Guid("5198f15f-08ad-4082-b172-0b079155dd52"),
                            CityId = new Guid("7a61e28c-9114-4d1d-9691-4538108507d8"),
                            Language = "uk",
                            Name = "Тернопіль"
                        },
                        new
                        {
                            Id = new Guid("92093e51-a10a-4c1d-81d3-44df26e2c1c8"),
                            CityId = new Guid("3a546866-c259-42b6-9178-3b503412b948"),
                            Language = "uk",
                            Name = "Ужгород"
                        },
                        new
                        {
                            Id = new Guid("49f85cb5-9714-482a-bc8a-b82d57b3fc75"),
                            CityId = new Guid("a31cc716-3d7d-46c0-b7c9-b3a5f5866db4"),
                            Language = "uk",
                            Name = "Харків"
                        },
                        new
                        {
                            Id = new Guid("4f75f46b-fffd-47eb-b008-4f2ce1cc46bf"),
                            CityId = new Guid("38b1359f-46b7-45b0-845e-d6f1fdc783b4"),
                            Language = "uk",
                            Name = "Херсон"
                        },
                        new
                        {
                            Id = new Guid("93b17d5c-1dfd-4455-8a90-9b9b6602386b"),
                            CityId = new Guid("2414fe8c-15a6-480d-850d-32503db698f9"),
                            Language = "uk",
                            Name = "Хмельницький"
                        },
                        new
                        {
                            Id = new Guid("14687ffd-6ff6-4f57-aba9-7a59d6595556"),
                            CityId = new Guid("4efa95ff-e1ed-495b-a931-7d8c7ffaa015"),
                            Language = "uk",
                            Name = "Черкаси"
                        },
                        new
                        {
                            Id = new Guid("9cdcb83b-09d5-4b4a-abeb-6c83ad876f61"),
                            CityId = new Guid("47564b02-f7f7-40c6-8043-661273139f14"),
                            Language = "uk",
                            Name = "Чернівці"
                        },
                        new
                        {
                            Id = new Guid("734dfade-6afc-4f9e-8b73-918f8f4a0dcf"),
                            CityId = new Guid("07e541d0-6ac4-4c0d-bda6-fe6732975ec2"),
                            Language = "uk",
                            Name = "Чернігів"
                        },
                        new
                        {
                            Id = new Guid("39e17771-ae43-4b60-802f-379032a54a22"),
                            CityId = new Guid("47c954f4-c369-47e4-81fe-fa19f4f9f7bb"),
                            Language = "en",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("d5ade2bf-cba0-4cba-81cb-1afb6e27ac28"),
                            CityId = new Guid("971b613e-827e-459c-a569-f1ebac222c7f"),
                            Language = "en",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("5f2fcb31-5596-4d4d-9b23-4ad19efca86f"),
                            CityId = new Guid("22b1cf37-6c20-45fb-909c-0fd3479cdc6b"),
                            Language = "en",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("cdd64565-7c11-4d14-9eaf-6cc489fe63b0"),
                            CityId = new Guid("bd8b9a78-a135-4547-afd1-50e6f384ac04"),
                            Language = "en",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("15a67fbd-dd59-4c30-a52c-1aa1c25da251"),
                            CityId = new Guid("eda27747-447f-43dd-8415-a63a84c3d028"),
                            Language = "en",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("60e95855-2947-4b37-86df-f3b75743edb6"),
                            CityId = new Guid("bc283497-31f6-4c8d-b43e-1bbb4731c622"),
                            Language = "en",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("c9019316-8374-48e5-b983-97bcce472710"),
                            CityId = new Guid("252189f1-823d-446b-9516-f91e1c6b6895"),
                            Language = "en",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("a86783d4-4293-45d2-aba1-77189f393f1b"),
                            CityId = new Guid("c0cccf42-fb86-4716-a8b0-1fee3104611b"),
                            Language = "en",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("9f807280-5b86-4271-a565-40068bccce5f"),
                            CityId = new Guid("81c8357f-f09a-41b3-8e6a-780216d82cc1"),
                            Language = "en",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("87d6a340-63f9-4317-a35f-6241a3241f30"),
                            CityId = new Guid("75cf52f1-b1f1-4031-9d6e-e3ea70861333"),
                            Language = "en",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("416d8368-12bf-457d-8e48-30c0b67a1070"),
                            CityId = new Guid("7b43b3f0-ce21-41ff-9a99-b6399e3c0d91"),
                            Language = "en",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("b117e8e9-8af0-497d-92ec-ebed288f1591"),
                            CityId = new Guid("0742e502-aad3-4ff7-b5c9-f269a9b5d705"),
                            Language = "en",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("9942c3fa-92b4-4de7-a1d2-e9fb8a033eab"),
                            CityId = new Guid("ec2a363e-6f2a-4c28-92ad-4a9de5aea185"),
                            Language = "en",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("a15ba1db-52f4-4978-98d3-f3f78d200160"),
                            CityId = new Guid("ee35ffea-4fa7-4f4b-8ff8-99d0563e7345"),
                            Language = "en",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("6681e0e0-a66b-4e90-a734-e1caeec583a2"),
                            CityId = new Guid("7a61e28c-9114-4d1d-9691-4538108507d8"),
                            Language = "en",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("24383742-7e6b-4ab9-b21d-f1169b99bdcf"),
                            CityId = new Guid("3a546866-c259-42b6-9178-3b503412b948"),
                            Language = "en",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("979801a2-947e-4b07-806d-f6dddd755f9e"),
                            CityId = new Guid("a31cc716-3d7d-46c0-b7c9-b3a5f5866db4"),
                            Language = "en",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("0a12ad99-0a1a-4e0b-ab83-7c40c3076adf"),
                            CityId = new Guid("38b1359f-46b7-45b0-845e-d6f1fdc783b4"),
                            Language = "en",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("44880e48-7c79-4e35-add5-6da2cac923d3"),
                            CityId = new Guid("2414fe8c-15a6-480d-850d-32503db698f9"),
                            Language = "en",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("98f2a34e-da05-4957-abcf-04007f67cac6"),
                            CityId = new Guid("4efa95ff-e1ed-495b-a931-7d8c7ffaa015"),
                            Language = "en",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("aa75eaf9-63c2-4e6e-bba1-4c9e9810c84b"),
                            CityId = new Guid("47564b02-f7f7-40c6-8043-661273139f14"),
                            Language = "en",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("f5b66019-b465-41c1-a8c9-e375c3bf82c3"),
                            CityId = new Guid("07e541d0-6ac4-4c0d-bda6-fe6732975ec2"),
                            Language = "en",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("6fed76f9-9ae4-4de6-ad86-84cb8c528290"),
                            CityId = new Guid("d05d838b-ceb5-4205-99b0-49755f0ae71a"),
                            Language = "uk",
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = new Guid("b941e37d-d352-4e1b-8fec-b3df686c6b66"),
                            CityId = new Guid("d8c385fc-2dde-4d1b-a907-49cabdb48d39"),
                            Language = "uk",
                            Name = "Люблін"
                        },
                        new
                        {
                            Id = new Guid("0fddc613-838a-41a1-a6e9-abf8e0ae51b2"),
                            CityId = new Guid("d05d838b-ceb5-4205-99b0-49755f0ae71a"),
                            Language = "en",
                            Name = "Varshava"
                        },
                        new
                        {
                            Id = new Guid("246902d0-d6fb-4a99-9724-ca9921f126d8"),
                            CityId = new Guid("d8c385fc-2dde-4d1b-a907-49cabdb48d39"),
                            Language = "en",
                            Name = "Lublin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            ISO = "uk"
                        },
                        new
                        {
                            Id = new Guid("b8b23549-a017-4431-84a8-e31c2a0b52c6"),
                            ISO = "pl"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("abdf73d0-0a4d-4b69-aeea-ac200ab74c2d"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            Language = "en",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("cdb374b2-45be-4fa0-a8a3-577e4ef408ee"),
                            CountryId = new Guid("31778fda-decf-470a-b9a6-af0a9a0c265f"),
                            Language = "uk",
                            Name = "Україна"
                        },
                        new
                        {
                            Id = new Guid("654d8765-588f-4784-a021-4f8c7760ad4c"),
                            CountryId = new Guid("b8b23549-a017-4431-84a8-e31c2a0b52c6"),
                            Language = "en",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("3a3a88ad-ad95-4a69-98f9-2f98a6df4fd9"),
                            CountryId = new Guid("b8b23549-a017-4431-84a8-e31c2a0b52c6"),
                            Language = "uk",
                            Name = "Польша"
                        });
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3bd4bb3a-5a14-41ae-8df6-342367232259"),
                            Title = "medicine"
                        },
                        new
                        {
                            Id = new Guid("cda08b8e-c25f-444e-ba82-67646307a137"),
                            Title = "cook"
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6cc48dd6-1c15-49a3-840c-4870c2195c79"),
                            CityId = new Guid("47c954f4-c369-47e4-81fe-fa19f4f9f7bb"),
                            DateOfBirth = new DateTime(2023, 4, 20, 18, 33, 43, 810, DateTimeKind.Local).AddTicks(1225),
                            FirstName = "the first",
                            LastName = "admin",
                            Login = "ourfirstadmin",
                            Password = "Rk/ryiBNbnHx+s9i1IveCNNw4axYPQHm4T1eratfQlg=",
                            Phone = "+11111111111",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithOne("ProfilePicture")
                        .HasForeignKey("DAL.Entities.ProfilePicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Navigation("CityTranslations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ProfilePicture");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
