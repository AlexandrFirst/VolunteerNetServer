// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(VolunteerNetServerDBContext))]
    [Migration("20230411144608_Application")]
    partial class Application
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36e495f7-c014-43b9-b08e-cab15e28b64a"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "vi"
                        },
                        new
                        {
                            Id = new Guid("f37f185f-2a63-4c12-bf8c-5f6b4f0e48c8"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "dn"
                        },
                        new
                        {
                            Id = new Guid("85d97665-7605-4cd8-8f3e-4b4481d1f811"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "zhy"
                        },
                        new
                        {
                            Id = new Guid("b9ef20a2-ee15-42cc-8a3a-2c1ab413b9a6"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "zp"
                        },
                        new
                        {
                            Id = new Guid("003fe764-effa-4cf3-a47f-aad8e94ae4e2"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "if"
                        },
                        new
                        {
                            Id = new Guid("825cbe99-6ec6-4117-8da0-210138606d39"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "ky"
                        },
                        new
                        {
                            Id = new Guid("48f9973c-02ee-4969-be58-f80ba89e352c"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "kr"
                        },
                        new
                        {
                            Id = new Guid("84d51932-b0c0-48ef-8640-8d6ac18d635f"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "lut"
                        },
                        new
                        {
                            Id = new Guid("3690f07e-05cc-41bc-b289-a025c11b760e"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "lv"
                        },
                        new
                        {
                            Id = new Guid("d841878b-bdd5-405f-9e6b-9e7f803db5c8"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "my"
                        },
                        new
                        {
                            Id = new Guid("66102a52-e499-41bc-943a-21b5dd534f06"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "od"
                        },
                        new
                        {
                            Id = new Guid("ed46128d-51e5-4154-9b2d-1fc37e39937c"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "pol"
                        },
                        new
                        {
                            Id = new Guid("891866d2-8129-499e-9599-8d3b16ce0e7f"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "ri"
                        },
                        new
                        {
                            Id = new Guid("3ad3b775-2619-4753-a586-36aaa998cc31"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "su"
                        },
                        new
                        {
                            Id = new Guid("d232c11f-cf57-4f72-a1fc-982e97cd4af7"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "ter"
                        },
                        new
                        {
                            Id = new Guid("3fda9522-c391-4001-82c7-5537427315c1"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "uzh"
                        },
                        new
                        {
                            Id = new Guid("b8e74d34-8778-4f62-b210-2c299b076634"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "khar"
                        },
                        new
                        {
                            Id = new Guid("490c78a4-342e-4b89-a7c3-6e94943af014"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "kher"
                        },
                        new
                        {
                            Id = new Guid("d804f328-0930-40e5-8406-3c9982d7afd1"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "khm"
                        },
                        new
                        {
                            Id = new Guid("f6c6bda0-c9ae-4533-a115-4d2d42178d19"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "chk"
                        },
                        new
                        {
                            Id = new Guid("e114e540-bf35-410b-a718-31fc8d07a91f"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "chv"
                        },
                        new
                        {
                            Id = new Guid("4bfa57e1-cf35-476a-8492-425c704301f7"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "chh"
                        },
                        new
                        {
                            Id = new Guid("f4a1002f-0b47-4e0b-94e5-18e5ba3cd503"),
                            CountryId = new Guid("b23124cc-9a57-4c8e-9797-a7ba57c3daad"),
                            ISO = "var"
                        },
                        new
                        {
                            Id = new Guid("5b62572f-8f1e-4578-9a49-53118b5a2af8"),
                            CountryId = new Guid("b23124cc-9a57-4c8e-9797-a7ba57c3daad"),
                            ISO = "lub"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("57ec66a6-926a-4d0e-ae2f-1051b2b82630"),
                            CityId = new Guid("36e495f7-c014-43b9-b08e-cab15e28b64a"),
                            Language = "uk",
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = new Guid("ec998c12-d438-427d-80e7-6e611fda3bfb"),
                            CityId = new Guid("f37f185f-2a63-4c12-bf8c-5f6b4f0e48c8"),
                            Language = "uk",
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = new Guid("39eed811-8356-49a5-8985-d35f2d49b77a"),
                            CityId = new Guid("85d97665-7605-4cd8-8f3e-4b4481d1f811"),
                            Language = "uk",
                            Name = "Житомир"
                        },
                        new
                        {
                            Id = new Guid("da46a268-845d-4aed-a097-63180a1cf45f"),
                            CityId = new Guid("b9ef20a2-ee15-42cc-8a3a-2c1ab413b9a6"),
                            Language = "uk",
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = new Guid("9365c3f2-2f95-47bb-afc6-138a779454aa"),
                            CityId = new Guid("003fe764-effa-4cf3-a47f-aad8e94ae4e2"),
                            Language = "uk",
                            Name = "Івано-Франківськ"
                        },
                        new
                        {
                            Id = new Guid("2b7bffc7-47b5-4982-b961-2cd1b691593a"),
                            CityId = new Guid("825cbe99-6ec6-4117-8da0-210138606d39"),
                            Language = "uk",
                            Name = "Київ"
                        },
                        new
                        {
                            Id = new Guid("40465811-fd6a-4a3f-a3e7-2e24dc4cbb9a"),
                            CityId = new Guid("48f9973c-02ee-4969-be58-f80ba89e352c"),
                            Language = "uk",
                            Name = "Кропивницький"
                        },
                        new
                        {
                            Id = new Guid("2adcd685-0435-44d3-950a-e52bf1c7cd26"),
                            CityId = new Guid("84d51932-b0c0-48ef-8640-8d6ac18d635f"),
                            Language = "uk",
                            Name = "Луцьк"
                        },
                        new
                        {
                            Id = new Guid("14a7f095-a931-4128-bfc5-d5b6dabfc594"),
                            CityId = new Guid("3690f07e-05cc-41bc-b289-a025c11b760e"),
                            Language = "uk",
                            Name = "Львів"
                        },
                        new
                        {
                            Id = new Guid("d50696a3-06c2-46bc-bb69-b0d06def100a"),
                            CityId = new Guid("d841878b-bdd5-405f-9e6b-9e7f803db5c8"),
                            Language = "uk",
                            Name = "Миколаїв"
                        },
                        new
                        {
                            Id = new Guid("458fd9e2-52dd-48e3-ad7a-999599fbe22f"),
                            CityId = new Guid("66102a52-e499-41bc-943a-21b5dd534f06"),
                            Language = "uk",
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = new Guid("bccf9559-0c21-415f-854e-3c586b4851fb"),
                            CityId = new Guid("ed46128d-51e5-4154-9b2d-1fc37e39937c"),
                            Language = "uk",
                            Name = "Полтава"
                        },
                        new
                        {
                            Id = new Guid("b13f538c-4eb9-42f8-9671-b3ce10dbf044"),
                            CityId = new Guid("891866d2-8129-499e-9599-8d3b16ce0e7f"),
                            Language = "uk",
                            Name = "Рівне"
                        },
                        new
                        {
                            Id = new Guid("6cd6c035-bf5f-45b2-b534-d376ff134f90"),
                            CityId = new Guid("3ad3b775-2619-4753-a586-36aaa998cc31"),
                            Language = "uk",
                            Name = "Суми"
                        },
                        new
                        {
                            Id = new Guid("ed70ef9e-e5da-45ec-806e-175a15261d81"),
                            CityId = new Guid("d232c11f-cf57-4f72-a1fc-982e97cd4af7"),
                            Language = "uk",
                            Name = "Тернопіль"
                        },
                        new
                        {
                            Id = new Guid("53b68f07-cc40-4595-b2d9-1dec0b0e4cdb"),
                            CityId = new Guid("3fda9522-c391-4001-82c7-5537427315c1"),
                            Language = "uk",
                            Name = "Ужгород"
                        },
                        new
                        {
                            Id = new Guid("9c47d5c6-0c84-4753-8af5-a3478595360d"),
                            CityId = new Guid("b8e74d34-8778-4f62-b210-2c299b076634"),
                            Language = "uk",
                            Name = "Харків"
                        },
                        new
                        {
                            Id = new Guid("1efbe9af-3ac0-49ad-aab0-a38e2a7821fc"),
                            CityId = new Guid("490c78a4-342e-4b89-a7c3-6e94943af014"),
                            Language = "uk",
                            Name = "Херсон"
                        },
                        new
                        {
                            Id = new Guid("26a8390c-7f8c-4e46-bfe2-f34935fcdcf5"),
                            CityId = new Guid("d804f328-0930-40e5-8406-3c9982d7afd1"),
                            Language = "uk",
                            Name = "Хмельницький"
                        },
                        new
                        {
                            Id = new Guid("5608c489-a684-4d30-a565-70e71a908696"),
                            CityId = new Guid("f6c6bda0-c9ae-4533-a115-4d2d42178d19"),
                            Language = "uk",
                            Name = "Черкаси"
                        },
                        new
                        {
                            Id = new Guid("bec80130-7dff-498d-9689-78487ecda022"),
                            CityId = new Guid("e114e540-bf35-410b-a718-31fc8d07a91f"),
                            Language = "uk",
                            Name = "Чернівці"
                        },
                        new
                        {
                            Id = new Guid("a66346cb-77ab-4fcc-9baf-a6e074288392"),
                            CityId = new Guid("4bfa57e1-cf35-476a-8492-425c704301f7"),
                            Language = "uk",
                            Name = "Чернігів"
                        },
                        new
                        {
                            Id = new Guid("09d84533-1d16-4bab-b1f1-0d903caefe4f"),
                            CityId = new Guid("36e495f7-c014-43b9-b08e-cab15e28b64a"),
                            Language = "en",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("e76475c2-e87e-4238-8b44-969fa9da9320"),
                            CityId = new Guid("f37f185f-2a63-4c12-bf8c-5f6b4f0e48c8"),
                            Language = "en",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("00643259-e22a-4020-9f26-0b8cc9fb8761"),
                            CityId = new Guid("85d97665-7605-4cd8-8f3e-4b4481d1f811"),
                            Language = "en",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("c7450ae3-4822-4b69-bc9a-a5147aace186"),
                            CityId = new Guid("b9ef20a2-ee15-42cc-8a3a-2c1ab413b9a6"),
                            Language = "en",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("298dd389-0d5d-417c-a939-1a99f81446d4"),
                            CityId = new Guid("003fe764-effa-4cf3-a47f-aad8e94ae4e2"),
                            Language = "en",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("f7d8279b-45ed-4bd7-9d8c-2d6dc8c9f408"),
                            CityId = new Guid("825cbe99-6ec6-4117-8da0-210138606d39"),
                            Language = "en",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("6d6d7b3c-08ee-4300-8741-69d8b7ba13c9"),
                            CityId = new Guid("48f9973c-02ee-4969-be58-f80ba89e352c"),
                            Language = "en",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("c4e41f97-02d5-49e1-9989-da5656f453a3"),
                            CityId = new Guid("84d51932-b0c0-48ef-8640-8d6ac18d635f"),
                            Language = "en",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("973f9987-9090-4776-b989-126fa4886fa1"),
                            CityId = new Guid("3690f07e-05cc-41bc-b289-a025c11b760e"),
                            Language = "en",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("dfc6bea1-ec54-4cb9-9617-6915751277ea"),
                            CityId = new Guid("d841878b-bdd5-405f-9e6b-9e7f803db5c8"),
                            Language = "en",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("7cdd34eb-9c30-4be9-aeae-f63ecdcf7342"),
                            CityId = new Guid("66102a52-e499-41bc-943a-21b5dd534f06"),
                            Language = "en",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("308af77c-7210-4de7-8c6b-a4039a64a896"),
                            CityId = new Guid("ed46128d-51e5-4154-9b2d-1fc37e39937c"),
                            Language = "en",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("5456d222-3239-4b94-97c0-b71d293f227d"),
                            CityId = new Guid("891866d2-8129-499e-9599-8d3b16ce0e7f"),
                            Language = "en",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("8aa66eec-4948-4d04-8f31-3798408a5c20"),
                            CityId = new Guid("3ad3b775-2619-4753-a586-36aaa998cc31"),
                            Language = "en",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("9e2c616a-57e3-4f39-a5ef-6e18b2f1a65f"),
                            CityId = new Guid("d232c11f-cf57-4f72-a1fc-982e97cd4af7"),
                            Language = "en",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("713e0fcb-ced9-4457-b827-a543410d40bd"),
                            CityId = new Guid("3fda9522-c391-4001-82c7-5537427315c1"),
                            Language = "en",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("bc913291-f30f-45b7-961d-ff784c5d30de"),
                            CityId = new Guid("b8e74d34-8778-4f62-b210-2c299b076634"),
                            Language = "en",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("8e5f1248-5837-4199-8ef8-42f8c7ebfdaf"),
                            CityId = new Guid("490c78a4-342e-4b89-a7c3-6e94943af014"),
                            Language = "en",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("d44b2b3c-d0dd-405d-b18a-1271feadc5a4"),
                            CityId = new Guid("d804f328-0930-40e5-8406-3c9982d7afd1"),
                            Language = "en",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("714cf084-3973-4227-a99b-e6c323b7847e"),
                            CityId = new Guid("f6c6bda0-c9ae-4533-a115-4d2d42178d19"),
                            Language = "en",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("1a7d0329-2c2e-44b2-be3e-c39a5ae0098d"),
                            CityId = new Guid("e114e540-bf35-410b-a718-31fc8d07a91f"),
                            Language = "en",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("a0f95d97-9c5d-4360-b5be-0cba45ff2743"),
                            CityId = new Guid("4bfa57e1-cf35-476a-8492-425c704301f7"),
                            Language = "en",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("1c9b0769-b4df-4601-a5ad-0dbd3efc7db2"),
                            CityId = new Guid("f4a1002f-0b47-4e0b-94e5-18e5ba3cd503"),
                            Language = "uk",
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = new Guid("17875e18-fa7a-453a-9808-7b114f49c5b9"),
                            CityId = new Guid("5b62572f-8f1e-4578-9a49-53118b5a2af8"),
                            Language = "uk",
                            Name = "Люблін"
                        },
                        new
                        {
                            Id = new Guid("d12f10a4-3032-4144-8b25-e40effb2b739"),
                            CityId = new Guid("f4a1002f-0b47-4e0b-94e5-18e5ba3cd503"),
                            Language = "en",
                            Name = "Varshava"
                        },
                        new
                        {
                            Id = new Guid("fb8f5c83-711e-47d9-bedd-7fb492d97d6c"),
                            CityId = new Guid("5b62572f-8f1e-4578-9a49-53118b5a2af8"),
                            Language = "en",
                            Name = "Lublin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            ISO = "uk"
                        },
                        new
                        {
                            Id = new Guid("b23124cc-9a57-4c8e-9797-a7ba57c3daad"),
                            ISO = "pl"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("67d3cd9a-9e31-4ab4-91b2-71cf7f5b79cb"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            Language = "en",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("aa77d233-75a9-4514-a08f-951c950e2320"),
                            CountryId = new Guid("d0112a6b-ce4b-433f-936d-6f3165d8c4d1"),
                            Language = "uk",
                            Name = "Україна"
                        },
                        new
                        {
                            Id = new Guid("9afcdd5b-3c6a-42ff-8f3b-7c23ba3fe88d"),
                            CountryId = new Guid("b23124cc-9a57-4c8e-9797-a7ba57c3daad"),
                            Language = "en",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("d696da80-0934-4e6d-8f62-3d4ba0115061"),
                            CountryId = new Guid("b23124cc-9a57-4c8e-9797-a7ba57c3daad"),
                            Language = "uk",
                            Name = "Польша"
                        });
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ef51929-9f88-402a-9ce1-a9d6613dc1bd"),
                            Title = "medicine"
                        },
                        new
                        {
                            Id = new Guid("d1cb9e77-a345-4783-8373-f526b622a1a0"),
                            Title = "cook"
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4398edd6-609e-445b-8daa-dc2d22757815"),
                            CityId = new Guid("36e495f7-c014-43b9-b08e-cab15e28b64a"),
                            DateOfBirth = new DateTime(2023, 4, 11, 17, 46, 7, 798, DateTimeKind.Local).AddTicks(3544),
                            FirstName = "the first",
                            LastName = "admin",
                            Login = "ourfirstadmin",
                            Password = "Rk/ryiBNbnHx+s9i1IveCNNw4axYPQHm4T1eratfQlg=",
                            Phone = "+11111111111",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithOne("ProfilePicture")
                        .HasForeignKey("DAL.Entities.ProfilePicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Navigation("CityTranslations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ProfilePicture");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
