// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(VolunteerNetServerDBContext))]
    [Migration("20230222204532_DefaultdataFirstAdmin")]
    partial class DefaultdataFirstAdmin
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8bcb3e73-a7a2-4998-ae77-c8cece37bc09"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "vi"
                        },
                        new
                        {
                            Id = new Guid("04de4d25-9326-4bf2-a193-75d4670198c8"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "dn"
                        },
                        new
                        {
                            Id = new Guid("01525635-6fbb-4635-a0a1-0bfa0562f01e"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "zhy"
                        },
                        new
                        {
                            Id = new Guid("cb3b24d9-34b0-4082-a391-8478c0792ca8"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "zp"
                        },
                        new
                        {
                            Id = new Guid("faee886d-f648-413f-96d0-6e7b7e307ebd"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "if"
                        },
                        new
                        {
                            Id = new Guid("d3eab625-c11c-41d0-a945-0bb31556c1fb"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "ky"
                        },
                        new
                        {
                            Id = new Guid("2ff7f6c2-cdb2-4917-8ddb-d45adde6343f"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "kr"
                        },
                        new
                        {
                            Id = new Guid("5dabcee2-a833-4537-b155-0c156ec1a78b"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "lut"
                        },
                        new
                        {
                            Id = new Guid("eb9994d2-8bc4-476e-b996-f632ff89aee7"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "lv"
                        },
                        new
                        {
                            Id = new Guid("012b8f73-37db-4bbd-9dff-301a14cd9784"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "my"
                        },
                        new
                        {
                            Id = new Guid("51689987-3a7c-4d11-9c11-0be6c2cd8eb7"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "od"
                        },
                        new
                        {
                            Id = new Guid("51388c76-2630-4719-99a1-51827e15af2f"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "pol"
                        },
                        new
                        {
                            Id = new Guid("afda54f6-bfef-4d5e-a045-82973a28c6ad"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "ri"
                        },
                        new
                        {
                            Id = new Guid("a0b7d14f-81a3-446f-b82c-c98123a1450a"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "su"
                        },
                        new
                        {
                            Id = new Guid("86b808fa-338e-44ee-bb88-5ef931f03af3"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "ter"
                        },
                        new
                        {
                            Id = new Guid("f8095775-cf5b-462b-90b5-67a19b40fa87"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "uzh"
                        },
                        new
                        {
                            Id = new Guid("87d0e47d-3e24-42d6-a861-5e2f94eb6398"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "khar"
                        },
                        new
                        {
                            Id = new Guid("35f650bf-9893-4c81-ad8a-9e052454b088"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "kher"
                        },
                        new
                        {
                            Id = new Guid("0fada013-f8ac-42bc-b88f-e34338f2fd6d"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "khm"
                        },
                        new
                        {
                            Id = new Guid("94c6bbbc-0dd6-456a-9b12-a86b51d3fe2e"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "chk"
                        },
                        new
                        {
                            Id = new Guid("498a5a7a-fb50-45f3-a2e8-63731023b22f"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "chv"
                        },
                        new
                        {
                            Id = new Guid("57942e0d-5cf4-49da-9e33-e4b4622bf8f8"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "chh"
                        },
                        new
                        {
                            Id = new Guid("8f61d732-dc29-41e2-84ea-0712dbfd4495"),
                            CountryId = new Guid("40901e60-b59d-4187-adb5-d04b95cc2f00"),
                            ISO = "var"
                        },
                        new
                        {
                            Id = new Guid("b3ce76c5-d66d-4ccc-a265-93f430ea388f"),
                            CountryId = new Guid("40901e60-b59d-4187-adb5-d04b95cc2f00"),
                            ISO = "lub"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6fdcdcbe-24a4-4795-b538-7baa3159abb8"),
                            CityId = new Guid("8bcb3e73-a7a2-4998-ae77-c8cece37bc09"),
                            Language = "uk",
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = new Guid("93737d70-b818-4eea-9b12-b0317e68f3ae"),
                            CityId = new Guid("04de4d25-9326-4bf2-a193-75d4670198c8"),
                            Language = "uk",
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = new Guid("9d27be89-1964-446c-8cc6-2e1013a48d7c"),
                            CityId = new Guid("01525635-6fbb-4635-a0a1-0bfa0562f01e"),
                            Language = "uk",
                            Name = "Житомир"
                        },
                        new
                        {
                            Id = new Guid("96d2ec16-795b-443e-bc65-6366d51bea96"),
                            CityId = new Guid("cb3b24d9-34b0-4082-a391-8478c0792ca8"),
                            Language = "uk",
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = new Guid("fbbc585a-c8d3-41e8-af04-8597d96a73dd"),
                            CityId = new Guid("faee886d-f648-413f-96d0-6e7b7e307ebd"),
                            Language = "uk",
                            Name = "Івано-Франківськ"
                        },
                        new
                        {
                            Id = new Guid("1fcfee7c-522c-486c-a6d6-8211df6aa9a1"),
                            CityId = new Guid("d3eab625-c11c-41d0-a945-0bb31556c1fb"),
                            Language = "uk",
                            Name = "Київ"
                        },
                        new
                        {
                            Id = new Guid("f24fe0a0-7f2a-4188-8aae-3a8624d25afd"),
                            CityId = new Guid("2ff7f6c2-cdb2-4917-8ddb-d45adde6343f"),
                            Language = "uk",
                            Name = "Кропивницький"
                        },
                        new
                        {
                            Id = new Guid("40d433fc-f568-4406-9c0e-3ecacc40c9e3"),
                            CityId = new Guid("5dabcee2-a833-4537-b155-0c156ec1a78b"),
                            Language = "uk",
                            Name = "Луцьк"
                        },
                        new
                        {
                            Id = new Guid("68a572be-fea9-4c27-86c7-749c4afd694d"),
                            CityId = new Guid("eb9994d2-8bc4-476e-b996-f632ff89aee7"),
                            Language = "uk",
                            Name = "Львів"
                        },
                        new
                        {
                            Id = new Guid("357d3bc8-1f9c-4062-b685-ab0bcd9aed78"),
                            CityId = new Guid("012b8f73-37db-4bbd-9dff-301a14cd9784"),
                            Language = "uk",
                            Name = "Миколаїв"
                        },
                        new
                        {
                            Id = new Guid("34494f1c-b65c-42f1-84f8-358057fa0abc"),
                            CityId = new Guid("51689987-3a7c-4d11-9c11-0be6c2cd8eb7"),
                            Language = "uk",
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = new Guid("0da1d5bb-6d9c-4127-84d0-fe23aa55d414"),
                            CityId = new Guid("51388c76-2630-4719-99a1-51827e15af2f"),
                            Language = "uk",
                            Name = "Полтава"
                        },
                        new
                        {
                            Id = new Guid("ff2e1834-5e30-44bb-938f-a9e0049c738c"),
                            CityId = new Guid("afda54f6-bfef-4d5e-a045-82973a28c6ad"),
                            Language = "uk",
                            Name = "Рівне"
                        },
                        new
                        {
                            Id = new Guid("f2bcec47-f729-4565-822b-e617aef3b44a"),
                            CityId = new Guid("a0b7d14f-81a3-446f-b82c-c98123a1450a"),
                            Language = "uk",
                            Name = "Суми"
                        },
                        new
                        {
                            Id = new Guid("36fb0298-89fb-442e-a5d2-06b037d357a3"),
                            CityId = new Guid("86b808fa-338e-44ee-bb88-5ef931f03af3"),
                            Language = "uk",
                            Name = "Тернопіль"
                        },
                        new
                        {
                            Id = new Guid("c4e9906e-7de4-4b28-85d8-66179abda67e"),
                            CityId = new Guid("f8095775-cf5b-462b-90b5-67a19b40fa87"),
                            Language = "uk",
                            Name = "Ужгород"
                        },
                        new
                        {
                            Id = new Guid("fb024c72-95ea-4862-adc3-9a0e91891bd8"),
                            CityId = new Guid("87d0e47d-3e24-42d6-a861-5e2f94eb6398"),
                            Language = "uk",
                            Name = "Харків"
                        },
                        new
                        {
                            Id = new Guid("41f2dae9-302b-4ed8-b106-e80b0cb7006c"),
                            CityId = new Guid("35f650bf-9893-4c81-ad8a-9e052454b088"),
                            Language = "uk",
                            Name = "Херсон"
                        },
                        new
                        {
                            Id = new Guid("6e54d645-38fb-4eb9-a58c-d9029aa47702"),
                            CityId = new Guid("0fada013-f8ac-42bc-b88f-e34338f2fd6d"),
                            Language = "uk",
                            Name = "Хмельницький"
                        },
                        new
                        {
                            Id = new Guid("2df58756-4435-446b-86fb-c0aa79eac53e"),
                            CityId = new Guid("94c6bbbc-0dd6-456a-9b12-a86b51d3fe2e"),
                            Language = "uk",
                            Name = "Черкаси"
                        },
                        new
                        {
                            Id = new Guid("78644915-50e7-4bd7-b48a-f92944d1d22e"),
                            CityId = new Guid("498a5a7a-fb50-45f3-a2e8-63731023b22f"),
                            Language = "uk",
                            Name = "Чернівці"
                        },
                        new
                        {
                            Id = new Guid("3f0eaac8-c4b7-46d7-a2e1-3b3f9ff6b941"),
                            CityId = new Guid("57942e0d-5cf4-49da-9e33-e4b4622bf8f8"),
                            Language = "uk",
                            Name = "Чернігів"
                        },
                        new
                        {
                            Id = new Guid("5a0cdbbb-f5a3-4e0f-96e0-71748b6b138e"),
                            CityId = new Guid("8bcb3e73-a7a2-4998-ae77-c8cece37bc09"),
                            Language = "en",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("9e92e71b-4dae-4361-9aca-5cac0f5bf48f"),
                            CityId = new Guid("04de4d25-9326-4bf2-a193-75d4670198c8"),
                            Language = "en",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("d9238879-7cee-4f44-b30d-bb2e1f178e04"),
                            CityId = new Guid("01525635-6fbb-4635-a0a1-0bfa0562f01e"),
                            Language = "en",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("97e46c75-1867-4772-b344-18a5cb65d002"),
                            CityId = new Guid("cb3b24d9-34b0-4082-a391-8478c0792ca8"),
                            Language = "en",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("f919ce55-ac08-4a3b-9805-0c8341e1be7a"),
                            CityId = new Guid("faee886d-f648-413f-96d0-6e7b7e307ebd"),
                            Language = "en",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("4031cbec-e585-489c-ae6c-fe22e2a81602"),
                            CityId = new Guid("d3eab625-c11c-41d0-a945-0bb31556c1fb"),
                            Language = "en",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("acf0b1e9-5535-446e-8f99-651990c207c0"),
                            CityId = new Guid("2ff7f6c2-cdb2-4917-8ddb-d45adde6343f"),
                            Language = "en",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("fe4b045c-5d5e-426c-a464-39b7f3f1729a"),
                            CityId = new Guid("5dabcee2-a833-4537-b155-0c156ec1a78b"),
                            Language = "en",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("88bfdea0-2239-45e6-b4d1-be2e55f2f4ff"),
                            CityId = new Guid("eb9994d2-8bc4-476e-b996-f632ff89aee7"),
                            Language = "en",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("a765ff8f-f643-40b0-ab0e-223345a91206"),
                            CityId = new Guid("012b8f73-37db-4bbd-9dff-301a14cd9784"),
                            Language = "en",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("c73167ad-6539-4a71-95e0-a55164377c32"),
                            CityId = new Guid("51689987-3a7c-4d11-9c11-0be6c2cd8eb7"),
                            Language = "en",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("47fb25ec-1cb8-4257-b19e-4ea6a5e410a6"),
                            CityId = new Guid("51388c76-2630-4719-99a1-51827e15af2f"),
                            Language = "en",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("f3f52cc4-d49c-4d08-bc1e-242352343683"),
                            CityId = new Guid("afda54f6-bfef-4d5e-a045-82973a28c6ad"),
                            Language = "en",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("5d5da4b6-b341-4e1a-8974-7041b4b83a20"),
                            CityId = new Guid("a0b7d14f-81a3-446f-b82c-c98123a1450a"),
                            Language = "en",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("2ac8cc26-0439-40c1-a327-74466dbb378c"),
                            CityId = new Guid("86b808fa-338e-44ee-bb88-5ef931f03af3"),
                            Language = "en",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("7c60fc11-39b9-47f8-aa54-fd037fb0db89"),
                            CityId = new Guid("f8095775-cf5b-462b-90b5-67a19b40fa87"),
                            Language = "en",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("64baff49-073b-4cb1-acca-3f747d7cf198"),
                            CityId = new Guid("87d0e47d-3e24-42d6-a861-5e2f94eb6398"),
                            Language = "en",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("76d31c2e-5688-4751-b012-7ba3e37fd32c"),
                            CityId = new Guid("35f650bf-9893-4c81-ad8a-9e052454b088"),
                            Language = "en",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("42cca5d2-5a9e-4f75-a7c4-932da19c2a00"),
                            CityId = new Guid("0fada013-f8ac-42bc-b88f-e34338f2fd6d"),
                            Language = "en",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("c2f3cb62-a285-45cd-bcf0-49410168fa25"),
                            CityId = new Guid("94c6bbbc-0dd6-456a-9b12-a86b51d3fe2e"),
                            Language = "en",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("f7e8c205-093f-405f-9c02-8b91c81f8e93"),
                            CityId = new Guid("498a5a7a-fb50-45f3-a2e8-63731023b22f"),
                            Language = "en",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("5aa122a2-329b-49ce-bfd9-04f1286f5a35"),
                            CityId = new Guid("57942e0d-5cf4-49da-9e33-e4b4622bf8f8"),
                            Language = "en",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("69dac06e-fa38-4ec3-b5aa-3b501b552ed3"),
                            CityId = new Guid("8f61d732-dc29-41e2-84ea-0712dbfd4495"),
                            Language = "uk",
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = new Guid("7736a5be-0c00-4889-8b08-0dcf3dde3dce"),
                            CityId = new Guid("b3ce76c5-d66d-4ccc-a265-93f430ea388f"),
                            Language = "uk",
                            Name = "Люблін"
                        },
                        new
                        {
                            Id = new Guid("201eebdc-2c7c-4b3c-9b9e-06f1fb8d8984"),
                            CityId = new Guid("8f61d732-dc29-41e2-84ea-0712dbfd4495"),
                            Language = "en",
                            Name = "Varshava"
                        },
                        new
                        {
                            Id = new Guid("c813c9d6-f2b1-4f2a-aed1-d6b74641a666"),
                            CityId = new Guid("b3ce76c5-d66d-4ccc-a265-93f430ea388f"),
                            Language = "en",
                            Name = "Lublin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            ISO = "uk"
                        },
                        new
                        {
                            Id = new Guid("40901e60-b59d-4187-adb5-d04b95cc2f00"),
                            ISO = "pl"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("464be5bc-5e2f-4470-a41d-e7e462c5645d"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            Language = "en",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("6ec95273-8479-4ebe-aa2b-6986c98dc89e"),
                            CountryId = new Guid("59e8a4d4-f8ed-4b3f-bacf-a02b1f6d6af7"),
                            Language = "uk",
                            Name = "Україна"
                        },
                        new
                        {
                            Id = new Guid("535bc928-2bfe-4c2f-bcb2-c3080f2d6395"),
                            CountryId = new Guid("40901e60-b59d-4187-adb5-d04b95cc2f00"),
                            Language = "en",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("e72569c6-bc9b-4f27-9180-86ab0c4d09d1"),
                            CountryId = new Guid("40901e60-b59d-4187-adb5-d04b95cc2f00"),
                            Language = "uk",
                            Name = "Польша"
                        });
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1fd7138-bf1a-41bd-9961-27439c4ade44"),
                            Title = "medicine"
                        },
                        new
                        {
                            Id = new Guid("83b648e6-86fb-4aec-ab72-df2d87f47b4f"),
                            Title = "cook"
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("94fd4913-c866-42d2-83aa-053e99946b25"),
                            CityId = new Guid("8bcb3e73-a7a2-4998-ae77-c8cece37bc09"),
                            DateOfBirth = new DateTime(2023, 2, 22, 22, 45, 32, 361, DateTimeKind.Local).AddTicks(7930),
                            FirstName = "the first",
                            LastName = "admin",
                            Login = "ourfirstadmin",
                            Password = "Rk/ryiBNbnHx+s9i1IveCNNw4axYPQHm4T1eratfQlg=",
                            Phone = "+11111111111",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NULL");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkill");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithOne("ProfilePicture")
                        .HasForeignKey("DAL.Entities.ProfilePicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Navigation("CityTranslations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("ProfilePicture");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
