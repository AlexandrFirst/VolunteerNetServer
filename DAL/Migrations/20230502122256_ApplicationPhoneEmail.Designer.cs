// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(VolunteerNetServerDBContext))]
    [Migration("20230502122256_ApplicationPhoneEmail")]
    partial class ApplicationPhoneEmail
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredNumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2c13ffa-8634-4e37-b439-120c198054ad"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "vi"
                        },
                        new
                        {
                            Id = new Guid("365300cb-74db-45f0-83b3-90986f8e40d5"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "dn"
                        },
                        new
                        {
                            Id = new Guid("8b0c910b-46b6-4fdd-9091-a646c79db3db"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "zhy"
                        },
                        new
                        {
                            Id = new Guid("d76cac69-fbcc-413a-b2df-7c7ee24fddae"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "zp"
                        },
                        new
                        {
                            Id = new Guid("dc71d11d-b1b0-4d3e-b1b1-925954935c30"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "if"
                        },
                        new
                        {
                            Id = new Guid("c19364f5-01df-4b70-80c7-7bffe8982fcd"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "ky"
                        },
                        new
                        {
                            Id = new Guid("62d2abcb-c3a8-483c-ac44-64bc3a5c4597"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "kr"
                        },
                        new
                        {
                            Id = new Guid("6e3f2677-8502-49f0-8f81-77fe482629ea"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "lut"
                        },
                        new
                        {
                            Id = new Guid("ca32c0ab-5f47-42fd-90d2-d3100e57c083"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "lv"
                        },
                        new
                        {
                            Id = new Guid("7ba6f120-688c-4969-b0a2-a1fcc127c60e"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "my"
                        },
                        new
                        {
                            Id = new Guid("643628c9-7cde-4a58-8777-2a2c3f4ebaca"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "od"
                        },
                        new
                        {
                            Id = new Guid("9649fe7f-715d-4516-836c-8f54ef255088"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "pol"
                        },
                        new
                        {
                            Id = new Guid("e668b8d4-64f6-4771-b824-cf370ce67277"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "ri"
                        },
                        new
                        {
                            Id = new Guid("f819ae7e-83c3-4d84-9df7-ff0d50d15138"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "su"
                        },
                        new
                        {
                            Id = new Guid("cc41b9b8-6511-4e29-ae47-b2a24af59d4a"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "ter"
                        },
                        new
                        {
                            Id = new Guid("ec2c8c19-1895-4e73-9482-f977a9a27396"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "uzh"
                        },
                        new
                        {
                            Id = new Guid("7c2a7949-2c33-44c9-94a2-2d0255999f4f"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "khar"
                        },
                        new
                        {
                            Id = new Guid("727f241c-09dc-4208-93bf-e8cbae8ad18d"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "kher"
                        },
                        new
                        {
                            Id = new Guid("2fb1d48a-0738-48d7-a10a-97dd02fdaa38"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "khm"
                        },
                        new
                        {
                            Id = new Guid("8e0ea4da-4a5e-4372-bea5-ee62f0591e67"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "chk"
                        },
                        new
                        {
                            Id = new Guid("4226a3d1-0fd2-4d17-9427-ef038c95c3c0"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "chv"
                        },
                        new
                        {
                            Id = new Guid("cc0e7971-7889-46b1-b03f-0409168ff8fd"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "chh"
                        },
                        new
                        {
                            Id = new Guid("a226a4c0-dbc0-4742-ba2f-573a6566e6cd"),
                            CountryId = new Guid("674e63bd-6ad7-48b8-9a34-fa5c92f9472f"),
                            ISO = "var"
                        },
                        new
                        {
                            Id = new Guid("4bd6ce69-e3c1-4db5-89fa-3e975dcecf8f"),
                            CountryId = new Guid("674e63bd-6ad7-48b8-9a34-fa5c92f9472f"),
                            ISO = "lub"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c21f25bd-531d-4237-aba8-ec8bb9015dcb"),
                            CityId = new Guid("d2c13ffa-8634-4e37-b439-120c198054ad"),
                            Language = "uk",
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = new Guid("c3928f66-9ae6-451f-acdd-8530dbe50229"),
                            CityId = new Guid("365300cb-74db-45f0-83b3-90986f8e40d5"),
                            Language = "uk",
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = new Guid("d29f55fb-b8dd-4778-b889-75e730aed8ce"),
                            CityId = new Guid("8b0c910b-46b6-4fdd-9091-a646c79db3db"),
                            Language = "uk",
                            Name = "Житомир"
                        },
                        new
                        {
                            Id = new Guid("cfeafe5d-8c9f-4c79-a4ef-b6416f568076"),
                            CityId = new Guid("d76cac69-fbcc-413a-b2df-7c7ee24fddae"),
                            Language = "uk",
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = new Guid("7891a598-7a90-4f84-9523-2b4c383f2aab"),
                            CityId = new Guid("dc71d11d-b1b0-4d3e-b1b1-925954935c30"),
                            Language = "uk",
                            Name = "Івано-Франківськ"
                        },
                        new
                        {
                            Id = new Guid("261c828a-e1de-4325-9488-cf891ec76b8c"),
                            CityId = new Guid("c19364f5-01df-4b70-80c7-7bffe8982fcd"),
                            Language = "uk",
                            Name = "Київ"
                        },
                        new
                        {
                            Id = new Guid("3ab43ced-368b-4818-a839-ab28d29677e3"),
                            CityId = new Guid("62d2abcb-c3a8-483c-ac44-64bc3a5c4597"),
                            Language = "uk",
                            Name = "Кропивницький"
                        },
                        new
                        {
                            Id = new Guid("d49c2c81-8072-4c4a-805d-d23043f7070c"),
                            CityId = new Guid("6e3f2677-8502-49f0-8f81-77fe482629ea"),
                            Language = "uk",
                            Name = "Луцьк"
                        },
                        new
                        {
                            Id = new Guid("9d33d4b0-3a60-4db0-99c8-4b9649e31a21"),
                            CityId = new Guid("ca32c0ab-5f47-42fd-90d2-d3100e57c083"),
                            Language = "uk",
                            Name = "Львів"
                        },
                        new
                        {
                            Id = new Guid("05d2bfd9-d5c8-4567-a05f-0d8e67216d18"),
                            CityId = new Guid("7ba6f120-688c-4969-b0a2-a1fcc127c60e"),
                            Language = "uk",
                            Name = "Миколаїв"
                        },
                        new
                        {
                            Id = new Guid("ce467272-82ee-4ec6-b696-2f15bb84d241"),
                            CityId = new Guid("643628c9-7cde-4a58-8777-2a2c3f4ebaca"),
                            Language = "uk",
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = new Guid("8574c39f-1d2e-4f30-83bf-43d7bbb526b9"),
                            CityId = new Guid("9649fe7f-715d-4516-836c-8f54ef255088"),
                            Language = "uk",
                            Name = "Полтава"
                        },
                        new
                        {
                            Id = new Guid("c1718f95-4042-4c64-8b5f-64e9ccb4c1ca"),
                            CityId = new Guid("e668b8d4-64f6-4771-b824-cf370ce67277"),
                            Language = "uk",
                            Name = "Рівне"
                        },
                        new
                        {
                            Id = new Guid("d2cb0410-2e97-4f9a-be12-f252fa05634d"),
                            CityId = new Guid("f819ae7e-83c3-4d84-9df7-ff0d50d15138"),
                            Language = "uk",
                            Name = "Суми"
                        },
                        new
                        {
                            Id = new Guid("360de2d4-fd6d-44f6-96fc-72caf603aecf"),
                            CityId = new Guid("cc41b9b8-6511-4e29-ae47-b2a24af59d4a"),
                            Language = "uk",
                            Name = "Тернопіль"
                        },
                        new
                        {
                            Id = new Guid("c99b079c-48a3-4db5-91b1-a1cc592c04fb"),
                            CityId = new Guid("ec2c8c19-1895-4e73-9482-f977a9a27396"),
                            Language = "uk",
                            Name = "Ужгород"
                        },
                        new
                        {
                            Id = new Guid("a94f38a9-4dcf-4545-9839-bdef00da362c"),
                            CityId = new Guid("7c2a7949-2c33-44c9-94a2-2d0255999f4f"),
                            Language = "uk",
                            Name = "Харків"
                        },
                        new
                        {
                            Id = new Guid("516a34d6-d037-4e7f-8ee0-85f3633fff57"),
                            CityId = new Guid("727f241c-09dc-4208-93bf-e8cbae8ad18d"),
                            Language = "uk",
                            Name = "Херсон"
                        },
                        new
                        {
                            Id = new Guid("e3e67c7c-6914-42f2-ac21-41ad874a89e9"),
                            CityId = new Guid("2fb1d48a-0738-48d7-a10a-97dd02fdaa38"),
                            Language = "uk",
                            Name = "Хмельницький"
                        },
                        new
                        {
                            Id = new Guid("3c624722-9dd2-4e76-9b2c-2d1909d345c8"),
                            CityId = new Guid("8e0ea4da-4a5e-4372-bea5-ee62f0591e67"),
                            Language = "uk",
                            Name = "Черкаси"
                        },
                        new
                        {
                            Id = new Guid("eba6a984-92e3-4761-acea-50564522200e"),
                            CityId = new Guid("4226a3d1-0fd2-4d17-9427-ef038c95c3c0"),
                            Language = "uk",
                            Name = "Чернівці"
                        },
                        new
                        {
                            Id = new Guid("db14ee9e-bc08-4c49-afb9-a21c93aae330"),
                            CityId = new Guid("cc0e7971-7889-46b1-b03f-0409168ff8fd"),
                            Language = "uk",
                            Name = "Чернігів"
                        },
                        new
                        {
                            Id = new Guid("3ff01deb-5007-40b3-a065-6da22c213e05"),
                            CityId = new Guid("d2c13ffa-8634-4e37-b439-120c198054ad"),
                            Language = "en",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("65391b3c-f291-4a7f-a5a2-7b154bbb57ec"),
                            CityId = new Guid("365300cb-74db-45f0-83b3-90986f8e40d5"),
                            Language = "en",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("1eed7f63-6610-46b0-b8d6-95bdb51c9259"),
                            CityId = new Guid("8b0c910b-46b6-4fdd-9091-a646c79db3db"),
                            Language = "en",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("cbde0fbe-d4c6-4b60-8740-d65d189152a8"),
                            CityId = new Guid("d76cac69-fbcc-413a-b2df-7c7ee24fddae"),
                            Language = "en",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("a6edc7d8-4c42-448c-a767-26c6d6ea8593"),
                            CityId = new Guid("dc71d11d-b1b0-4d3e-b1b1-925954935c30"),
                            Language = "en",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("283f1dcf-edcd-4a8b-8777-913997434b86"),
                            CityId = new Guid("c19364f5-01df-4b70-80c7-7bffe8982fcd"),
                            Language = "en",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("8298ac78-8bbc-4973-a654-993942892866"),
                            CityId = new Guid("62d2abcb-c3a8-483c-ac44-64bc3a5c4597"),
                            Language = "en",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("3731ece6-97a1-479e-a0d1-2f5bfc0eeb12"),
                            CityId = new Guid("6e3f2677-8502-49f0-8f81-77fe482629ea"),
                            Language = "en",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("4a91b944-693a-4d68-8f36-dc8895f5ce73"),
                            CityId = new Guid("ca32c0ab-5f47-42fd-90d2-d3100e57c083"),
                            Language = "en",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("285a7128-a792-4e98-9e3c-bbb0bb869ef2"),
                            CityId = new Guid("7ba6f120-688c-4969-b0a2-a1fcc127c60e"),
                            Language = "en",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("b5b94c81-afff-4494-a017-f08fa1c923d2"),
                            CityId = new Guid("643628c9-7cde-4a58-8777-2a2c3f4ebaca"),
                            Language = "en",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("ba5f29c1-5553-4e12-b047-821930c11a5d"),
                            CityId = new Guid("9649fe7f-715d-4516-836c-8f54ef255088"),
                            Language = "en",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("767d5157-350c-45d4-a1a5-7c427b311c39"),
                            CityId = new Guid("e668b8d4-64f6-4771-b824-cf370ce67277"),
                            Language = "en",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("5feb3086-1d25-46d9-a53f-676901eb9a37"),
                            CityId = new Guid("f819ae7e-83c3-4d84-9df7-ff0d50d15138"),
                            Language = "en",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("fe7f58aa-fe1b-42ea-bcc5-0ccd09ddd3ed"),
                            CityId = new Guid("cc41b9b8-6511-4e29-ae47-b2a24af59d4a"),
                            Language = "en",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("182e4c33-dcc8-42b5-8deb-eaa8ea618731"),
                            CityId = new Guid("ec2c8c19-1895-4e73-9482-f977a9a27396"),
                            Language = "en",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("77f7f4e1-34c1-4bfe-af2d-6e081c953818"),
                            CityId = new Guid("7c2a7949-2c33-44c9-94a2-2d0255999f4f"),
                            Language = "en",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("5a4c0fe5-204c-4673-a5b0-6118384feab3"),
                            CityId = new Guid("727f241c-09dc-4208-93bf-e8cbae8ad18d"),
                            Language = "en",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("dc7ad54d-a616-4de5-a916-df6136830ef1"),
                            CityId = new Guid("2fb1d48a-0738-48d7-a10a-97dd02fdaa38"),
                            Language = "en",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("f7e86cdb-4167-4a1b-9458-b15686395187"),
                            CityId = new Guid("8e0ea4da-4a5e-4372-bea5-ee62f0591e67"),
                            Language = "en",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("1554ef6c-0286-4bcf-9167-70e86d654151"),
                            CityId = new Guid("4226a3d1-0fd2-4d17-9427-ef038c95c3c0"),
                            Language = "en",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("e003dfd9-b747-4177-9e80-ff755dfc5b54"),
                            CityId = new Guid("cc0e7971-7889-46b1-b03f-0409168ff8fd"),
                            Language = "en",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("36505890-b9e1-45d2-86f0-a549bb0e8b07"),
                            CityId = new Guid("a226a4c0-dbc0-4742-ba2f-573a6566e6cd"),
                            Language = "uk",
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = new Guid("d10a089e-78f6-4f7a-a373-f5f6f8356dd2"),
                            CityId = new Guid("4bd6ce69-e3c1-4db5-89fa-3e975dcecf8f"),
                            Language = "uk",
                            Name = "Люблін"
                        },
                        new
                        {
                            Id = new Guid("729bdc74-7ae2-463d-88f6-b748a190197b"),
                            CityId = new Guid("a226a4c0-dbc0-4742-ba2f-573a6566e6cd"),
                            Language = "en",
                            Name = "Varshava"
                        },
                        new
                        {
                            Id = new Guid("3840ff9a-249e-4604-9a46-d20d2baac244"),
                            CityId = new Guid("4bd6ce69-e3c1-4db5-89fa-3e975dcecf8f"),
                            Language = "en",
                            Name = "Lublin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            ISO = "uk"
                        },
                        new
                        {
                            Id = new Guid("674e63bd-6ad7-48b8-9a34-fa5c92f9472f"),
                            ISO = "pl"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55deb733-c973-432d-8239-b711186301ec"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            Language = "en",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("a9166caf-da49-4032-8490-bb6b8f1bdd32"),
                            CountryId = new Guid("193740d1-5c21-42e5-8cf9-8b6226bef693"),
                            Language = "uk",
                            Name = "Україна"
                        },
                        new
                        {
                            Id = new Guid("d03697a6-02ee-4723-920d-08784a2aa3d7"),
                            CountryId = new Guid("674e63bd-6ad7-48b8-9a34-fa5c92f9472f"),
                            Language = "en",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("a3fdbb5f-3021-40fb-8e54-8c081fbd1c67"),
                            CountryId = new Guid("674e63bd-6ad7-48b8-9a34-fa5c92f9472f"),
                            Language = "uk",
                            Name = "Польша"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VolunteerApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VolunteerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VolunteerUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VolunteerUserId", "VolunteerApplicationId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e28031ad-50ad-420c-ab6a-9ae2b3983904"),
                            Title = "medicine"
                        },
                        new
                        {
                            Id = new Guid("10ba989a-aa3c-442b-8d43-0579507be39b"),
                            Title = "cooking"
                        },
                        new
                        {
                            Id = new Guid("d11fae5e-59fc-4eae-a017-e87b5720c62d"),
                            Title = "building"
                        },
                        new
                        {
                            Id = new Guid("3412d7d9-cc69-4fe5-b608-ccddc9ccd957"),
                            Title = "psychology"
                        });
                });

            modelBuilder.Entity("DAL.Entities.SkillTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("SkillTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb2ded72-bf75-4863-803a-1ff0387efea2"),
                            Language = "en",
                            Name = "medicine",
                            SkillId = new Guid("e28031ad-50ad-420c-ab6a-9ae2b3983904")
                        },
                        new
                        {
                            Id = new Guid("5de55305-ea32-4154-a220-f49279517b00"),
                            Language = "uk",
                            Name = "медицина",
                            SkillId = new Guid("e28031ad-50ad-420c-ab6a-9ae2b3983904")
                        },
                        new
                        {
                            Id = new Guid("f027ee40-360a-4303-a421-7fa6615cb6ef"),
                            Language = "en",
                            Name = "cooking",
                            SkillId = new Guid("10ba989a-aa3c-442b-8d43-0579507be39b")
                        },
                        new
                        {
                            Id = new Guid("e71e3cb4-c542-4b27-8d9d-675f43b878b6"),
                            Language = "uk",
                            Name = "кулінарія",
                            SkillId = new Guid("10ba989a-aa3c-442b-8d43-0579507be39b")
                        },
                        new
                        {
                            Id = new Guid("05a64ad1-ab2d-443d-8d68-34937f7d449e"),
                            Language = "en",
                            Name = "building",
                            SkillId = new Guid("d11fae5e-59fc-4eae-a017-e87b5720c62d")
                        },
                        new
                        {
                            Id = new Guid("a065704d-f1e3-4b00-a9be-d6774ce2a507"),
                            Language = "uk",
                            Name = "будівництво",
                            SkillId = new Guid("d11fae5e-59fc-4eae-a017-e87b5720c62d")
                        },
                        new
                        {
                            Id = new Guid("74743a9e-156a-48ed-8e69-828d6006a741"),
                            Language = "en",
                            Name = "psychology",
                            SkillId = new Guid("3412d7d9-cc69-4fe5-b608-ccddc9ccd957")
                        },
                        new
                        {
                            Id = new Guid("816965ab-a3bc-4f68-a26a-9317091bd5af"),
                            Language = "uk",
                            Name = "психологія",
                            SkillId = new Guid("3412d7d9-cc69-4fe5-b608-ccddc9ccd957")
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9c151020-1522-4ab1-bf90-b901b3c19236"),
                            CityId = new Guid("d2c13ffa-8634-4e37-b439-120c198054ad"),
                            DateOfBirth = new DateTime(2023, 5, 2, 15, 22, 56, 214, DateTimeKind.Local).AddTicks(7877),
                            FirstName = "the first",
                            LastName = "admin",
                            Login = "ourfirstadmin",
                            Password = "Rk/ryiBNbnHx+s9i1IveCNNw4axYPQHm4T1eratfQlg=",
                            Phone = "+11111111111",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.Message", b =>
                {
                    b.HasOne("DAL.Entities.Volunteer", "Volunteer")
                        .WithMany("Messages")
                        .HasForeignKey("VolunteerUserId", "VolunteerApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Volunteer");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithOne("ProfilePicture")
                        .HasForeignKey("DAL.Entities.ProfilePicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.SkillTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("SkillTranslations")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.HasOne("DAL.Entities.Application", "Application")
                        .WithMany("Volunteers")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Volunteers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Navigation("CityTranslations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Navigation("SkillTranslations");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ProfilePicture");

                    b.Navigation("UserSkills");

                    b.Navigation("Volunteers");
                });

            modelBuilder.Entity("DAL.Entities.Volunteer", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
