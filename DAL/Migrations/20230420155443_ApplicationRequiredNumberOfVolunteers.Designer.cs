// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(VolunteerNetServerDBContext))]
    [Migration("20230420155443_ApplicationRequiredNumberOfVolunteers")]
    partial class ApplicationRequiredNumberOfVolunteers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("RequiredNumberOfVolunteers")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f775e0fc-a994-411c-a64e-123704375069"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "vi"
                        },
                        new
                        {
                            Id = new Guid("39c5983c-1693-4fe0-9e9c-6fe5c0ceb335"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "dn"
                        },
                        new
                        {
                            Id = new Guid("de8818eb-12fa-4ab4-aeb4-50c3880659ee"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "zhy"
                        },
                        new
                        {
                            Id = new Guid("a8f9e902-36b3-450d-b3f1-a9ad3a68f210"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "zp"
                        },
                        new
                        {
                            Id = new Guid("088364c0-ef40-4fae-bd92-474c8b988b2e"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "if"
                        },
                        new
                        {
                            Id = new Guid("c85a1a1a-3021-4656-a5ad-9fdb698a3375"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "ky"
                        },
                        new
                        {
                            Id = new Guid("0256606e-6308-40df-bfe8-61e925eebdfc"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "kr"
                        },
                        new
                        {
                            Id = new Guid("68056499-7632-4e76-b8f3-93966dd2a2a8"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "lut"
                        },
                        new
                        {
                            Id = new Guid("be61d77f-3f22-4e93-9729-f073530e70be"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "lv"
                        },
                        new
                        {
                            Id = new Guid("1027c634-4611-458e-a7c8-46e1257f26a9"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "my"
                        },
                        new
                        {
                            Id = new Guid("eff580ec-1b30-416e-b7d5-9e6b984ec21d"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "od"
                        },
                        new
                        {
                            Id = new Guid("9ce965e8-f36a-438b-baac-30c351e97e99"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "pol"
                        },
                        new
                        {
                            Id = new Guid("a16cca83-7ab5-423d-8946-302825653db8"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "ri"
                        },
                        new
                        {
                            Id = new Guid("e3849085-dd83-41f1-9807-57df2ce07141"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "su"
                        },
                        new
                        {
                            Id = new Guid("bd15e204-5ea2-4535-b314-a0f775bad3b5"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "ter"
                        },
                        new
                        {
                            Id = new Guid("a5cd03d8-6bd5-4602-bde8-e7ed8a6eb7bd"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "uzh"
                        },
                        new
                        {
                            Id = new Guid("aa5bf7c2-8704-49d6-8266-2c316d497909"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "khar"
                        },
                        new
                        {
                            Id = new Guid("67f7d9c6-58eb-4ea4-ba0b-fda00a8a6d23"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "kher"
                        },
                        new
                        {
                            Id = new Guid("2a44f6b8-1140-4a56-99f5-5e27fb84cbd9"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "khm"
                        },
                        new
                        {
                            Id = new Guid("5c9f3cb6-0b9b-4f58-a51b-ea88248ad0ff"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "chk"
                        },
                        new
                        {
                            Id = new Guid("0fda1e51-f3af-4ccd-9d10-dc3c7bd453f2"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "chv"
                        },
                        new
                        {
                            Id = new Guid("3dbf085d-fc39-4842-8468-036ad9a83fcf"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "chh"
                        },
                        new
                        {
                            Id = new Guid("bd559d17-aa7e-48a3-8579-bfee09c6185f"),
                            CountryId = new Guid("d7f717f7-a2e1-4694-a0f2-ccc0edf94554"),
                            ISO = "var"
                        },
                        new
                        {
                            Id = new Guid("ab9723f8-2ff1-44f8-938e-06b29c2f406c"),
                            CountryId = new Guid("d7f717f7-a2e1-4694-a0f2-ccc0edf94554"),
                            ISO = "lub"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("CityTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dacd8c56-dae8-4e4a-946f-1eab1a8b2354"),
                            CityId = new Guid("f775e0fc-a994-411c-a64e-123704375069"),
                            Language = "uk",
                            Name = "Вінниця"
                        },
                        new
                        {
                            Id = new Guid("52c96b39-73e5-4530-b29f-5f379f6e1318"),
                            CityId = new Guid("39c5983c-1693-4fe0-9e9c-6fe5c0ceb335"),
                            Language = "uk",
                            Name = "Дніпро"
                        },
                        new
                        {
                            Id = new Guid("3af5c820-e911-49ac-bb01-b83825f3ab5b"),
                            CityId = new Guid("de8818eb-12fa-4ab4-aeb4-50c3880659ee"),
                            Language = "uk",
                            Name = "Житомир"
                        },
                        new
                        {
                            Id = new Guid("93c439c1-02e7-44f5-91f2-103e36faa69d"),
                            CityId = new Guid("a8f9e902-36b3-450d-b3f1-a9ad3a68f210"),
                            Language = "uk",
                            Name = "Запоріжжя"
                        },
                        new
                        {
                            Id = new Guid("f5cc591b-52e8-425f-a1ce-0250cd08fcfe"),
                            CityId = new Guid("088364c0-ef40-4fae-bd92-474c8b988b2e"),
                            Language = "uk",
                            Name = "Івано-Франківськ"
                        },
                        new
                        {
                            Id = new Guid("651eb113-0452-45f1-8e28-36a70b4d6888"),
                            CityId = new Guid("c85a1a1a-3021-4656-a5ad-9fdb698a3375"),
                            Language = "uk",
                            Name = "Київ"
                        },
                        new
                        {
                            Id = new Guid("abe2b97d-c301-4c2d-8c17-ad69eb9bad87"),
                            CityId = new Guid("0256606e-6308-40df-bfe8-61e925eebdfc"),
                            Language = "uk",
                            Name = "Кропивницький"
                        },
                        new
                        {
                            Id = new Guid("2c4e9d35-abef-4fe8-921a-c1f848d25d9e"),
                            CityId = new Guid("68056499-7632-4e76-b8f3-93966dd2a2a8"),
                            Language = "uk",
                            Name = "Луцьк"
                        },
                        new
                        {
                            Id = new Guid("4e4467c4-b162-4f3b-abfa-c5808d72b8f4"),
                            CityId = new Guid("be61d77f-3f22-4e93-9729-f073530e70be"),
                            Language = "uk",
                            Name = "Львів"
                        },
                        new
                        {
                            Id = new Guid("f90320ec-bcd7-4b64-937b-8910665522b6"),
                            CityId = new Guid("1027c634-4611-458e-a7c8-46e1257f26a9"),
                            Language = "uk",
                            Name = "Миколаїв"
                        },
                        new
                        {
                            Id = new Guid("1465d3b7-16dd-4e23-a3f3-2dff754cf614"),
                            CityId = new Guid("eff580ec-1b30-416e-b7d5-9e6b984ec21d"),
                            Language = "uk",
                            Name = "Одеса"
                        },
                        new
                        {
                            Id = new Guid("696fb331-1cce-4a2c-8dbd-189929e8236f"),
                            CityId = new Guid("9ce965e8-f36a-438b-baac-30c351e97e99"),
                            Language = "uk",
                            Name = "Полтава"
                        },
                        new
                        {
                            Id = new Guid("6f0971ae-1545-46c1-a2fd-956f06021f85"),
                            CityId = new Guid("a16cca83-7ab5-423d-8946-302825653db8"),
                            Language = "uk",
                            Name = "Рівне"
                        },
                        new
                        {
                            Id = new Guid("1e8502e8-de85-42a6-978f-9153cd6dedfa"),
                            CityId = new Guid("e3849085-dd83-41f1-9807-57df2ce07141"),
                            Language = "uk",
                            Name = "Суми"
                        },
                        new
                        {
                            Id = new Guid("15f05935-efe9-4a55-90cc-f7978cf565d0"),
                            CityId = new Guid("bd15e204-5ea2-4535-b314-a0f775bad3b5"),
                            Language = "uk",
                            Name = "Тернопіль"
                        },
                        new
                        {
                            Id = new Guid("62085cf9-c281-4a1f-b9b0-ad237bbec5f8"),
                            CityId = new Guid("a5cd03d8-6bd5-4602-bde8-e7ed8a6eb7bd"),
                            Language = "uk",
                            Name = "Ужгород"
                        },
                        new
                        {
                            Id = new Guid("2b8c0023-4fc8-4216-b2fd-7ebf985a61be"),
                            CityId = new Guid("aa5bf7c2-8704-49d6-8266-2c316d497909"),
                            Language = "uk",
                            Name = "Харків"
                        },
                        new
                        {
                            Id = new Guid("7795488b-48aa-42cf-9bd3-e3da245adf4f"),
                            CityId = new Guid("67f7d9c6-58eb-4ea4-ba0b-fda00a8a6d23"),
                            Language = "uk",
                            Name = "Херсон"
                        },
                        new
                        {
                            Id = new Guid("21ae1bdb-54d4-4e54-b1db-a90146b30069"),
                            CityId = new Guid("2a44f6b8-1140-4a56-99f5-5e27fb84cbd9"),
                            Language = "uk",
                            Name = "Хмельницький"
                        },
                        new
                        {
                            Id = new Guid("e4741e3e-8877-4f98-a32e-331fbb94ba35"),
                            CityId = new Guid("5c9f3cb6-0b9b-4f58-a51b-ea88248ad0ff"),
                            Language = "uk",
                            Name = "Черкаси"
                        },
                        new
                        {
                            Id = new Guid("a517d85d-c3ca-4634-be41-e8d4381f52db"),
                            CityId = new Guid("0fda1e51-f3af-4ccd-9d10-dc3c7bd453f2"),
                            Language = "uk",
                            Name = "Чернівці"
                        },
                        new
                        {
                            Id = new Guid("7eddf9b2-dd6d-4a0f-97b7-2be0f24fa950"),
                            CityId = new Guid("3dbf085d-fc39-4842-8468-036ad9a83fcf"),
                            Language = "uk",
                            Name = "Чернігів"
                        },
                        new
                        {
                            Id = new Guid("02f74c13-daa2-41b3-8870-a37a3e91127b"),
                            CityId = new Guid("f775e0fc-a994-411c-a64e-123704375069"),
                            Language = "en",
                            Name = "Vinnytsia"
                        },
                        new
                        {
                            Id = new Guid("dd21c8a6-772c-400b-8a07-8cf3da37c558"),
                            CityId = new Guid("39c5983c-1693-4fe0-9e9c-6fe5c0ceb335"),
                            Language = "en",
                            Name = "Dnipro"
                        },
                        new
                        {
                            Id = new Guid("c5a0bd07-75d1-45f2-b2a8-a84b207b5ea6"),
                            CityId = new Guid("de8818eb-12fa-4ab4-aeb4-50c3880659ee"),
                            Language = "en",
                            Name = "Zhytomyr"
                        },
                        new
                        {
                            Id = new Guid("6d6286d8-6ef2-48c2-a4ba-ebbe1e571ed2"),
                            CityId = new Guid("a8f9e902-36b3-450d-b3f1-a9ad3a68f210"),
                            Language = "en",
                            Name = "Zaporizhzhia"
                        },
                        new
                        {
                            Id = new Guid("a4a97ff7-fa8b-401d-bd73-6d418c63fa83"),
                            CityId = new Guid("088364c0-ef40-4fae-bd92-474c8b988b2e"),
                            Language = "en",
                            Name = "Ivano-Frankivsk"
                        },
                        new
                        {
                            Id = new Guid("3642fbef-468e-4aa7-8ed5-2aef6cc90ad7"),
                            CityId = new Guid("c85a1a1a-3021-4656-a5ad-9fdb698a3375"),
                            Language = "en",
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = new Guid("42ea9356-507f-470e-ba5f-ca27ea6ee16f"),
                            CityId = new Guid("0256606e-6308-40df-bfe8-61e925eebdfc"),
                            Language = "en",
                            Name = "Kropyvnytskyi"
                        },
                        new
                        {
                            Id = new Guid("60ab37cb-ac89-4c6e-8794-e6341ec31b7e"),
                            CityId = new Guid("68056499-7632-4e76-b8f3-93966dd2a2a8"),
                            Language = "en",
                            Name = "Lutsk"
                        },
                        new
                        {
                            Id = new Guid("463b0223-ed5a-40e2-af96-498839934092"),
                            CityId = new Guid("be61d77f-3f22-4e93-9729-f073530e70be"),
                            Language = "en",
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = new Guid("88338e56-f022-4af5-a6a4-8021fd65b2c5"),
                            CityId = new Guid("1027c634-4611-458e-a7c8-46e1257f26a9"),
                            Language = "en",
                            Name = "Mykolaiv"
                        },
                        new
                        {
                            Id = new Guid("137abb8a-9f8e-4751-9ad6-16ac789a5e41"),
                            CityId = new Guid("eff580ec-1b30-416e-b7d5-9e6b984ec21d"),
                            Language = "en",
                            Name = "Odesa"
                        },
                        new
                        {
                            Id = new Guid("3b814660-68f5-4879-a597-56fb3a514b85"),
                            CityId = new Guid("9ce965e8-f36a-438b-baac-30c351e97e99"),
                            Language = "en",
                            Name = "Poltava"
                        },
                        new
                        {
                            Id = new Guid("7f6c47aa-3718-4468-aeb4-df289f170f65"),
                            CityId = new Guid("a16cca83-7ab5-423d-8946-302825653db8"),
                            Language = "en",
                            Name = "Rivne"
                        },
                        new
                        {
                            Id = new Guid("a276c068-bca3-4ba8-a97a-f7c2fabf8af0"),
                            CityId = new Guid("e3849085-dd83-41f1-9807-57df2ce07141"),
                            Language = "en",
                            Name = "Sumy"
                        },
                        new
                        {
                            Id = new Guid("76d34220-5d4b-431f-a92b-a664417adf97"),
                            CityId = new Guid("bd15e204-5ea2-4535-b314-a0f775bad3b5"),
                            Language = "en",
                            Name = "Ternopil"
                        },
                        new
                        {
                            Id = new Guid("d5865c2f-6f90-4565-8922-10461e1595bf"),
                            CityId = new Guid("a5cd03d8-6bd5-4602-bde8-e7ed8a6eb7bd"),
                            Language = "en",
                            Name = "Uzhhorod"
                        },
                        new
                        {
                            Id = new Guid("a1a390ba-6b56-43a8-a8e0-09b15b294533"),
                            CityId = new Guid("aa5bf7c2-8704-49d6-8266-2c316d497909"),
                            Language = "en",
                            Name = "Kharkiv"
                        },
                        new
                        {
                            Id = new Guid("ebbd7003-0dc5-4fcc-ba11-f406149d0310"),
                            CityId = new Guid("67f7d9c6-58eb-4ea4-ba0b-fda00a8a6d23"),
                            Language = "en",
                            Name = "Kherson"
                        },
                        new
                        {
                            Id = new Guid("83563050-b7e8-4c18-ad2d-794bf3c9b657"),
                            CityId = new Guid("2a44f6b8-1140-4a56-99f5-5e27fb84cbd9"),
                            Language = "en",
                            Name = "Khmelnytskyi"
                        },
                        new
                        {
                            Id = new Guid("44ee1a47-eed9-4876-969c-04026d5c7bab"),
                            CityId = new Guid("5c9f3cb6-0b9b-4f58-a51b-ea88248ad0ff"),
                            Language = "en",
                            Name = "Cherkasy"
                        },
                        new
                        {
                            Id = new Guid("73649b38-e171-4d35-9627-bb10c192e942"),
                            CityId = new Guid("0fda1e51-f3af-4ccd-9d10-dc3c7bd453f2"),
                            Language = "en",
                            Name = "Chernivtsi"
                        },
                        new
                        {
                            Id = new Guid("39762485-1b82-4bb8-b1f9-e6f8ddc6810e"),
                            CityId = new Guid("3dbf085d-fc39-4842-8468-036ad9a83fcf"),
                            Language = "en",
                            Name = "Chernihiv"
                        },
                        new
                        {
                            Id = new Guid("3c82b0d9-8fec-4009-8b49-d6303297ff1a"),
                            CityId = new Guid("bd559d17-aa7e-48a3-8579-bfee09c6185f"),
                            Language = "uk",
                            Name = "Варшава"
                        },
                        new
                        {
                            Id = new Guid("943f3537-ff80-42ce-95c0-c638e7d827a3"),
                            CityId = new Guid("ab9723f8-2ff1-44f8-938e-06b29c2f406c"),
                            Language = "uk",
                            Name = "Люблін"
                        },
                        new
                        {
                            Id = new Guid("529aa79b-6904-4196-bb35-f654555bf367"),
                            CityId = new Guid("bd559d17-aa7e-48a3-8579-bfee09c6185f"),
                            Language = "en",
                            Name = "Varshava"
                        },
                        new
                        {
                            Id = new Guid("fdad54e6-54b4-4cff-abad-0112c57583d7"),
                            CityId = new Guid("ab9723f8-2ff1-44f8-938e-06b29c2f406c"),
                            Language = "en",
                            Name = "Lublin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            ISO = "uk"
                        },
                        new
                        {
                            Id = new Guid("d7f717f7-a2e1-4694-a0f2-ccc0edf94554"),
                            ISO = "pl"
                        });
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("CountryTranslations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("79543a45-ef1a-4e5f-aa21-715a28287b24"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            Language = "en",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = new Guid("fe570c98-d00e-4a4a-ba43-8dc133ac4f4d"),
                            CountryId = new Guid("b62c38d3-7295-4a5d-b883-a4fb15029ed8"),
                            Language = "uk",
                            Name = "Україна"
                        },
                        new
                        {
                            Id = new Guid("4e2f3942-b7ed-49ba-9ffa-e8ac39ebe392"),
                            CountryId = new Guid("d7f717f7-a2e1-4694-a0f2-ccc0edf94554"),
                            Language = "en",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = new Guid("3ad1d8f2-2b09-4fa6-bd57-9149c00227ea"),
                            CountryId = new Guid("d7f717f7-a2e1-4694-a0f2-ccc0edf94554"),
                            Language = "uk",
                            Name = "Польша"
                        });
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Format")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ProfilePictures");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0a330ef-76af-4a9c-a937-a1c0ddd4d2f5"),
                            Title = "medicine"
                        },
                        new
                        {
                            Id = new Guid("c398f1be-9d42-469e-a537-fd319f22128c"),
                            Title = "cook"
                        });
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c85c92b-e81c-4036-a8f4-1c881ee1458b"),
                            CityId = new Guid("f775e0fc-a994-411c-a64e-123704375069"),
                            DateOfBirth = new DateTime(2023, 4, 20, 18, 54, 42, 716, DateTimeKind.Local).AddTicks(4102),
                            FirstName = "the first",
                            LastName = "admin",
                            Login = "ourfirstadmin",
                            Password = "Rk/ryiBNbnHx+s9i1IveCNNw4axYPQHm4T1eratfQlg=",
                            Phone = "+11111111111",
                            Role = "admin"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Document")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("NULL");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.Application", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.CityTranslation", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("CityTranslations")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.CountryTranslation", b =>
                {
                    b.HasOne("DAL.Entities.Country", "Country")
                        .WithMany("CountryTranslations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("DAL.Entities.ProfilePicture", b =>
                {
                    b.HasOne("DAL.Entities.User", "User")
                        .WithOne("ProfilePicture")
                        .HasForeignKey("DAL.Entities.ProfilePicture", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.HasOne("DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DAL.Entities.UserSkill", b =>
                {
                    b.HasOne("DAL.Entities.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.City", b =>
                {
                    b.Navigation("CityTranslations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("CountryTranslations");
                });

            modelBuilder.Entity("DAL.Entities.Skill", b =>
                {
                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("DAL.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("ProfilePicture");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
